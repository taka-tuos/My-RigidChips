// [RCD] 
Val
{
	AB(default=0, min=-90, max=90)
	G0(default=0, max=10000000000)
	G1(default=0, max=10000000000)
	G2(default=0, max=10000000000)
	G3(default=0, max=10000000000)
	GF(default=0, min=-180, max=180)
	GR(default=0, min=-180, max=180)
	JX(default=0, min=-90, max=90)
	JY(default=0, min=-90, max=90)
	MA1(default=0, max=10000000000, step=10000000000)
	MA2(default=0, max=10000000000, step=10000000000)
	MP1(default=0, min=-10000000000, max=10000000000)
	MP2(default=0, min=-10000000000, max=10000000000)
	MX1(default=0, min=-90, max=90)
	MX2(default=0, min=-90, max=90)
	MY1(default=0, min=-90, max=90)
	MY2(default=0, min=-90, max=90)
	MZ1(default=0, min=-10000000000, max=10000000000)
	MZ2(default=0, min=-10000000000, max=10000000000)
	P(default=0, min=-10000000000, max=10000000000)
	R(default=0, min=-90, max=90)
	RD(default=0, min=-90, max=90)
	V(default=0, min=-90, max=90)
	V0(default=0, min=-90, max=90)
	V1(default=0, min=-90, max=90)
	V2(default=0, min=-90, max=90)
	V3(default=0, min=-90, max=90)
	WB(default=0, max=10000000000)
	WS(default=0, min=-90, max=90)
}
Key
{
}
Body
{
	Core() {
		W:Cowl(option=1, effect=#F0FB, name=LS) { }
		E:Cowl(option=1, effect=#F0FB, option=1, name=RS) { }
		S:Cowl(option=1, effect=#F0FB, option=1, name=TS) { }
		N:Cowl(option=1, effect=#F0FB, option=1, name=FS) { }
		S:Cowl() {
			S:Cowl() {
				S:Cowl(color=#402040) { }
			}
		}
		S:Chip() {
			S:Cowl(angle=-30) {
				S:Cowl(angle=120) {
					S:Cowl(angle=-95, color=#402040) {
						S:Cowl(option=5, color=#402040) { }
					}
					E:Cowl(angle=-95, color=#402040) {
						E:Cowl(option=5, color=#402040) { }
					}
					W:Cowl(angle=-95, color=#402040) {
						W:Cowl(option=5, color=#402040) { }
					}
					N:Cowl(angle=-95, color=#402040) {
						N:Cowl(option=5, color=#402040) { }
					}
					S:Cowl(angle=90, color=#402040) {
						S:Cowl(color=#402040) {
							W:Cowl(angle=90) {
								S:Cowl(angle=-15, option=1) {
									S:Cowl(angle=-165, color=#402040) {
										W:Cowl(angle=-90, color=#402040) { }
										E:Cowl(angle=-90, color=#402040) { }
										S:Cowl(angle=-8, color=#402040) {
											S:Cowl(angle=4, color=#402040) {
												W:Cowl(angle=-90, color=#402040) { }
												S:Cowl(color=#402040) {
													W:Cowl(angle=-90, color=#402040) { }
													E:Cowl(angle=-90, color=#402040) { }
												}
												E:Cowl(angle=-90, color=#402040) { }
											}
											W:Cowl(angle=-90, color=#402040) {
												S:Cowl(color=#402040) { }
											}
											E:Cowl(angle=-90, color=#402040) {
												S:Cowl(color=#402040) { }
											}
										}
									}
								}
							}
							E:Cowl(angle=90) {
								S:Cowl(angle=-15, option=1) {
									S:Cowl(angle=-165, color=#402040) {
										W:Cowl(angle=-90, color=#402040) { }
										E:Cowl(angle=-90, color=#402040) { }
										S:Cowl(angle=-8, color=#402040) {
											S:Cowl(angle=4, color=#402040) {
												W:Cowl(angle=-90, color=#402040) { }
												S:Cowl(color=#402040) {
													W:Cowl(angle=-90, color=#402040) { }
													E:Cowl(angle=-90, color=#402040) { }
												}
												E:Cowl(angle=-90, color=#402040) { }
											}
											W:Cowl(angle=-90, color=#402040) {
												S:Cowl(color=#402040) { }
											}
											E:Cowl(angle=-90, color=#402040) {
												S:Cowl(color=#402040) { }
											}
										}
									}
								}
							}
						}
						W:Cowl(angle=90) { }
						E:Cowl(angle=90) { }
					}
				}
				N:Cowl(angle=-30) {
					N:Cowl() {
						N:Cowl() {
							N:Cowl() {
								N:Cowl() {
									N:Cowl(angle=150) {
										W:Cowl(angle=85, option=3) {
											N:Cowl(option=4) { }
										}
										N:Cowl(angle=30) {
											N:Cowl(color=#402040) {
												N:Cowl(color=#402040) { }
												W:Cowl(angle=85, color=#402040) {
													N:Cowl(color=#402040) { }
												}
												E:Cowl(angle=85, color=#402040) {
													N:Cowl(color=#402040) { }
												}
											}
											W:Cowl(angle=85, option=3) { }
											E:Cowl(angle=85, option=4) { }
										}
										E:Cowl(angle=85, option=4) {
											N:Cowl(option=3) { }
										}
									}
									N:Cowl(angle=-155) {
										W:Cowl(angle=-85, option=3) {
											N:Cowl(option=4) { }
										}
										N:Cowl(angle=-15) {
											N:Cowl(angle=15, color=#606060) {
												N:Cowl(angle=-25, color=#606060) {
													N:Cowl(angle=-14, color=#402040) {
														N:Cowl(angle=4, color=#402040) {
															N:Cowl(angle=4, color=#402040) {
																W:Cowl(angle=-90, color=#402040) { }
																E:Cowl(angle=-90, color=#402040) { }
															}
															W:Cowl(angle=-90, color=#402040) {
																N:Cowl(color=#402040) { }
															}
															E:Cowl(angle=-90, color=#402040) {
																N:Cowl(color=#402040) { }
															}
														}
														W:Cowl(angle=-85, color=#402040) {
															S:Cowl(option=3, color=#402040) { }
															N:Cowl(angle=-5, color=#402040) { }
														}
														E:Cowl(angle=-85, color=#402040) {
															S:Cowl(angle=-5, option=4, color=#402040) { }
															N:Cowl(angle=-5, color=#402040) { }
														}
													}
													E:Cowl(angle=-90, color=#606060) { }
													W:Cowl(angle=-90, color=#606060) { }
												}
												E:Cowl(angle=-90, color=#606060) { }
												W:Cowl(angle=-90, color=#606060) { }
											}
											W:Cowl(angle=-85, option=3) {
												N:Cowl(option=4, color=#402040) { }
											}
											E:Cowl(angle=-85, option=4) {
												N:Cowl(option=3, color=#402040) { }
											}
										}
										E:Cowl(angle=-85, option=4) {
											N:Cowl(option=3) { }
										}
									}
								}
							}
						}
					}
				}
			}
			S:Chip() {
				N:TrimF(angle=90, option=1) {
					N:RudderF(angle=GF, option=1) {
						N:Wheel(angle=-WS, brake=WB) { }
					}
				}
				S:Chip() {
					S:Chip(color=#402040) {
						S:TrimF(angle=-90) {
							W:Rudder(angle=-20, color=#402040) {
								W:Trim(angle=RD, color=#402040) { }
								W:Cowl(color=#402040) {
									W:Cowl(angle=90, option=1, effect=#F0FB) {
										N:Cowl(angle=60, option=1, effect=#F0FB) {
											E:Cowl(angle=90, color=#402040) {
												N:Cowl(color=#402040) {
													N:Cowl(color=#402040) { }
												}
											}
										}
									}
								}
							}
							W:Cowl(color=#402040) {
								W:Cowl(angle=90, option=1, effect=#F0FB) {
									N:Cowl(angle=45, option=1, effect=#F0FB) {
										E:Cowl(angle=90, color=#402040) { }
									}
								}
							}
						}
						W:Trim(color=#402040, spring=1, damper=1) {
							S:Chip(angle=-V, color=#402040) { }
							W:Wheel(angle=GR, brake=WB) { }
							W:Trim(angle=AB, color=#402040) { }
							W:Trim(color=#402040, spring=1, damper=1) {
								S:Chip(angle=-R, color=#402040) { }
								S:Cowl(option=1, effect=#F0FB) {
									W:Cowl(color=#402040) {
										W:Cowl(angle=90, option=1, effect=#F0FB) {
											N:Cowl(angle=35, option=1, effect=#F0FB) {
												E:Cowl(angle=90, color=#402040) {
													N:Cowl(color=#402040) {
														N:Cowl(color=#402040) {
															N:Cowl(color=#402040) {
																W:Cowl(angle=90, option=1, effect=#F0FB) {
																	N:Cowl(angle=-15, option=1, effect=#F0FB) {
																		E:Cowl(angle=90, color=#402040) {
																			S:Cowl(color=#402040) { }
																			N:Cowl(color=#402040) { }
																		}
																	}
																}
																E:Cowl(color=#402040) { }
															}
															E:Cowl(color=#402040) { }
														}
														E:Cowl(color=#402040) { }
													}
												}
											}
										}
									}
								}
							}
						}
						E:Trim(color=#402040, spring=1, damper=1) {
							S:Chip(angle=-V, color=#402040) { }
							E:Wheel(angle=GR, brake=WB) { }
							E:Trim(angle=-AB, color=#402040) { }
							E:Trim(color=#402040, spring=1, damper=1) {
								S:Chip(angle=R, color=#402040) { }
								S:Cowl(option=1, effect=#F0FB) {
									E:Cowl(color=#402040) {
										E:Cowl(angle=90, option=1, effect=#F0FB) {
											N:Cowl(angle=35, option=1, effect=#F0FB) {
												W:Cowl(angle=90, color=#402040) {
													N:Cowl(color=#402040) {
														N:Cowl(color=#402040) {
															N:Cowl(color=#402040) {
																E:Cowl(angle=90, option=1, effect=#F0FB) {
																	N:Cowl(angle=-15, option=1, effect=#F0FB) {
																		W:Cowl(angle=90, color=#402040) {
																			N:Cowl(color=#402040) { }
																			S:Cowl(color=#402040) { }
																		}
																	}
																}
																W:Cowl(color=#402040) { }
															}
															W:Cowl(color=#402040) { }
														}
														W:Cowl(color=#402040) { }
													}
												}
											}
										}
									}
								}
							}
						}
						S:Frame(angle=0) {
							S:RudderF(angle=-JY, option=1) {
								N:Frame(angle=JX) {
									N:Frame(angle=-150) {
										N:Jet(angle=-120, power=P) {
											W:Cowl(angle=-90, color=#402040) {
												W:Cowl(angle=-15, option=5, color=#402040) { }
												E:Cowl(angle=-5, option=5, color=#403000) { }
											}
											E:Cowl(angle=-90, color=#402040) {
												E:Cowl(angle=-15, option=5, color=#402040) { }
												W:Cowl(angle=-7, option=5, color=#403000) { }
											}
											S:Cowl(angle=-90, color=#402040) {
												S:Cowl(angle=-15, option=5, color=#402040) { }
												N:Cowl(angle=-20, color=#201800) { }
											}
											N:Cowl(angle=-90, color=#402040) {
												N:Cowl(angle=-15, option=5, color=#402040) { }
												S:Cowl(angle=-20, color=#201800) { }
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
Lua
{
require("daretoku_taka/xgui.lua")
require("daretoku_taka/xhud2.lua")
require("daretoku_taka/libccvx3.lua")
require("daretoku_taka/libresume.lua")
require("daretoku_taka/libgun.lua")
require("daretoku_taka/libweapon.lua")

_limitlist={1500,1800,2000,2200,2500,64512}

_prvtbl = InitPRVTable()

_prvtbl.p.limit = 200000
_prvtbl.p.step  = 200000

_prvtbl.r.tgt = 360
_prvtbl.r.kp  = 12
_prvtbl.r.ki  = 12
_prvtbl.r.kd  = 4
_prvtbl.r.il  = 20

_prvtbl.v.tgt = 180
_prvtbl.v.kp  = 24
_prvtbl.v.ki  = 32
_prvtbl.v.kd  = 4
_prvtbl.v.il  = 20

JX_PID = XPID_new()
JY_PID = XPID_new()
WS_PID = XPID_new()
RD_PID = XPID_new()

_gf=25
_gr=70

local inited = false

function OnFrame()
	if not inited then
		CCVXOnInit()
		inited = true
	end

	CCVXOnFrame(true)

	ShowSplash("XF-18 Delta/Plus")
	
	local p,r,v,b = GetPRVBAnalog(_prvtbl,{p=P,b=AB})
	
	P=p
	R=r
	V=v
	AB=b
	
	local dv = math.rad(-_NORMANALOG(1)*180/30)
	local dy = math.rad((_KEY(5)-_KEY(4))*60/30)
	
	if _gf == 0 then dy = dy * 2 end
	
	--JX = JX_PID:PID(dv,WX,24,16,2,40)
	--JY = JY_PID:PID(dy,WY,24,16,2,40)
	RD = RD_PID:PID(dy,WY,24,16,2,40)
	WS = WS_PID:PID(dy,WY,24,16,2,40)
	
	if _KEY(0) == 0 then
		if _KEYDOWN(6) == 1 then
			if _gf == 0 then _gf = 25
			else _gf = 0 end
			if _gr == 70 then _gr = 180
			else _gr = 70 end
		end
		
		WB=_LINER(WB,_KEY(7)*100,50)
	end
	
	GF=_LINER(GF,_gf,1)
	GR=_LINER(GR,_gr,4.4)
	
	CheckLimit()
	
	XHUD.Draw()
	
	Weapon.Stat()
end
}
