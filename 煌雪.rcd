// [RCD] 
Val
{
	D(default=0, min=-32, max=32, step=4)
	G1(default=0, max=65536, step=65536)
	G2(default=0, max=65536, step=65536)
	G3(default=0, max=65536, step=65536)
	G4(default=0, max=65536, step=65536)
	N(default=55, min=55, max=90)
	P(default=0, max=300000, step=30000)
	R(default=0, min=-16, max=16, step=4)
	V(default=0, min=-16, max=16, step=4)
}
Key
{
	0:V(step=4)
	1:V(step=-4)
	2:R(step=4)
	3:R(step=-4)
	4:P(step=30000)
	14:D(step=-4)
	15:D(step=4)
}
Body
{
	Core() {
		S:Frame(angle=75, option=1) {
			S:Frame(angle=-75, option=1) {
				N:Frame() {
					E:Cowl(angle=-90) {
						S:Cowl() {
							S:Cowl() {
								S:Cowl(angle=170) {
									S:Cowl(angle=10) {
										S:Cowl() {
											S:Cowl(angle=5) {
												E:Cowl(angle=90) { }
												W:Cowl(angle=90) { }
											}
											E:Cowl(angle=90) { }
											W:Cowl(angle=90) { }
											N:Cowl(angle=-2, option=2, color=#ff0000) { }
										}
										E:Cowl(angle=90) { }
										W:Cowl(angle=90) { }
										N:Cowl(angle=5) {
											N:Cowl(angle=5) {
												N:Cowl(angle=2) {
													N:Cowl() { }
												}
												E:Cowl(angle=90, option=3) { }
												W:Cowl(angle=90, option=4) { }
											}
											E:Cowl(angle=90) { }
											W:Cowl(angle=90) { }
										}
									}
								}
							}
						}
					}
					W:Cowl(angle=-90) {
						S:Cowl() {
							S:Cowl() {
								S:Cowl(angle=170) {
									S:Cowl(angle=10) {
										S:Cowl() {
											S:Cowl(angle=4) {
												W:Cowl(angle=90) { }
												E:Cowl(angle=90) { }
											}
											W:Cowl(angle=90) { }
											E:Cowl(angle=90) { }
											N:Cowl(angle=-2, option=2, color=#ff0000) { }
										}
										W:Cowl(angle=90) { }
										E:Cowl(angle=90) { }
										N:Cowl(angle=5) {
											N:Cowl(angle=5) {
												N:Cowl(angle=2) {
													N:Cowl() { }
												}
												W:Cowl(angle=90, option=4) { }
												E:Cowl(angle=90, option=3) { }
											}
											W:Cowl(angle=90) { }
											E:Cowl(angle=90) { }
										}
									}
								}
							}
						}
					}
					N:Frame() {
						N:Arm(power=G2, option=50000) { }
						N:Frame(angle=-90, option=1) {
							N:Arm(angle=90, power=G1, option=50000) {
								S:Cowl() { }
							}
							W:Arm(angle=90, power=G4, option=50000) { }
							E:Arm(angle=90, power=G3, option=50000) { }
							N:Cowl(angle=120, option=5) { }
							W:Cowl(angle=120, option=5) { }
							S:Cowl(angle=120, option=5) { }
							E:Cowl(angle=120, option=5) { }
						}
						N:RLW(angle=-90, power=P) {
							W:Trim(angle=N) { }
							E:Trim(angle=N) { }
						}
						N:RLW(angle=-90, power=-P) {
							W:Trim(angle=-N) { }
							E:Trim(angle=-N) { }
						}
					}
				}
				S:Frame(option=1) {
					S:Frame(option=1) {
						S:Frame(option=1) {
							S:TrimF(angle=-90, option=1) {
								W:Chip(angle=0) {
									E:Frame(angle=-97.5, option=1) {
										E:Trim(angle=V) {
											N:Cowl(angle=-90, option=1, effect=#F0FB) {
												E:Cowl(angle=170, option=1, effect=#F0FB) {
													S:Cowl(angle=90) {
														E:Cowl() { }
													}
												}
											}
											W:Chip() { }
										}
									}
									E:Frame(angle=97.5, option=1) {
										E:Trim(angle=-V) {
											N:Cowl(angle=90, option=1, effect=#F0FB) {
												E:Cowl(angle=-170, option=1, effect=#F0FB) {
													S:Cowl(angle=-90) {
														E:Cowl() { }
													}
												}
											}
											W:Chip() { }
										}
									}
								}
								N:Rudder(angle=-90) {
									N:Rudder(angle=-60) {
										S:Chip(angle=D) { }
									}
									E:Chip(angle=D) { }
								}
							}
						}
					}
				}
			}
		}
		N:Cowl(angle=-150, color=#202020) {
			N:Cowl(angle=-20, color=#202020) {
				N:Cowl(angle=-15) {
					E:Cowl(angle=-85) { }
					W:Cowl(angle=-85, option=0) { }
					N:Cowl(angle=-5) {
						W:Cowl(angle=-85, option=0) {
							N:Cowl(angle=-10) {
								N:Cowl(option=3) { }
							}
						}
						E:Cowl(angle=-85, option=0) {
							N:Cowl(angle=-10) {
								N:Cowl(option=4) { }
							}
						}
					}
				}
				E:Cowl(angle=-85, color=#202020) { }
				W:Cowl(angle=-85, color=#202020) { }
			}
			E:Cowl(angle=-85, color=#202020) { }
			W:Cowl(angle=-85, color=#202020) { }
		}
		S:Chip() {
			E:Frame(angle=70) {
				E:Frame(angle=100) {
					W:Trim(angle=180) {
						W:Trim(angle=R) {
							W:Chip() {
								W:Cowl() {
									N:Cowl(angle=-90, option=1, effect=#F0FB) {
										W:Cowl(angle=170, option=1, effect=#F0FB) {
											S:Cowl(angle=90) {
												W:Cowl() {
													W:Cowl() {
														W:Cowl() {
															W:Cowl(angle=5) { }
														}
														S:Cowl(angle=90, effect=#f0fb) {
															W:Cowl(angle=-160, effect=#f0fb) {
																N:Cowl(angle=-92, option=2, color=#ff0000) { }
																N:Cowl(angle=-88, option=2, color=#ff0000) { }
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
						E:Cowl(angle=-5) { }
					}
				}
			}
			W:Frame(angle=70) {
				W:Frame(angle=100) {
					E:Trim(angle=180) {
						E:Trim(angle=R) {
							E:Chip() {
								E:Cowl() {
									N:Cowl(angle=-90, option=1, effect=#F0FB) {
										E:Cowl(angle=170, option=1, effect=#F0FB) {
											S:Cowl(angle=90) {
												E:Cowl() {
													E:Cowl() {
														E:Cowl() {
															E:Cowl(angle=5) { }
														}
														S:Cowl(angle=90, effect=#f0fb) {
															E:Cowl(angle=-160, effect=#f0fb) {
																N:Cowl(angle=-88, option=2, color=#ff0000) { }
																N:Cowl(angle=-92, option=2, color=#ff0000) { }
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
						W:Cowl(angle=-5) { }
					}
				}
			}
		}
	}
}
Lua
{
function _VEL(n)
	return _LEN3( _VX(n), _VY(n), _VZ(n))
end

function _LEN3(a,b,c)
	return math.sqrt(a * a + b * b + c * c)
end

MK = 0
NG = 1

function OnFrame()
	NK = _VEL(0) * 3.6
	
	if NK > MK then
		MK = NK
	end
	
	out(0,"ëìò@ãZå§ è\\òZéÆèdêÌì¨ã@ ‡äê·")
	out(1, NK, "kph")
	out(2, _WEIGHT(), "kg")
	out(3, _FPS(), "fps")
	out(4, "max ", MK, "kph")
	
	N = 25 * ((NK - 200) / 200) + 55
	
	if NG == 4 and _KEY(5) == 1 and math.mod(_TICKS(),3) == 0 then
		G4 = 65536
		NG = 1
	elseif NG == 3 and _KEY(5) == 1 and math.mod(_TICKS(),3) == 0 then
		G3 = 65536
		NG = 4
	elseif NG == 2 and _KEY(5) == 1 and math.mod(_TICKS(),3) == 0 then
		G2 = 65536
		NG = 3
	elseif NG == 1 and _KEY(5) == 1 and math.mod(_TICKS(),3) == 0 then
		G1 = 65536
		NG = 2
	end
end
}
