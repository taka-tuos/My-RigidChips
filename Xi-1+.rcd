// [RCD] 
Val
{
	AB(default=0, min=-90, max=90)
	JP1L(default=0, min=-90, max=90)
	JP1R(default=0, min=-90, max=90)
	JP2L(default=0, min=-90, max=90)
	JP2R(default=0, min=-90, max=90)
	JP3L(default=0, min=-90, max=90)
	JP3R(default=0, min=-90, max=90)
	JXL(default=0, min=-90, max=90)
	JXR(default=0, min=-90, max=90)
	JYL(default=0, min=-90, max=90)
	JYR(default=0, min=-90, max=90)
	P(default=0, max=10000000000)
	R(default=0, min=-90, max=90)
	RD(default=0, min=-90, max=90)
	V(default=0, min=-90, max=90)
}
Key
{
}
Body
{
	Core() {
		W:Cowl(option=1, effect=#F0FB, option=1, name=LS) { }
		E:Cowl(option=1, effect=#F0FB, option=1, name=RS) { }
		S:Cowl(option=1, effect=#F0FB, option=1, name=TS) { }
		N:Cowl(option=1, effect=#F0FB, option=1, name=FS) { }
		E:Trim(angle=V, color=#41505D, spring=1, damper=1) {
			E:Cowl(angle=90, option=1, effect=#F0FB) {
				N:Cowl(angle=50, option=1, effect=#F0FB) {
					W:Cowl(angle=90, color=#457285) {
						S:Cowl(color=#457285) {
							E:Cowl(angle=90, option=1, effect=#F0FB) {
								S:Cowl(angle=50, option=1, effect=#F0FB) {
									S:Cowl(angle=100, option=1, effect=#F0FB) {
										W:Cowl(angle=90, option=4, color=#457285) {
											S:Cowl(color=#41505D) { }
										}
									}
									W:Cowl(angle=90, option=3, color=#457285) { }
								}
							}
						}
						N:Cowl(option=3, color=#457285) { }
					}
				}
			}
		}
		W:Trim(angle=-V, color=#41505D, spring=1, damper=1) {
			W:Cowl(angle=90, option=1, effect=#F0FB) {
				N:Cowl(angle=50, option=1, effect=#F0FB) {
					E:Cowl(angle=90, color=#457285) {
						S:Cowl(color=#457285) {
							W:Cowl(angle=90, option=1, effect=#F0FB) {
								S:Cowl(angle=50, option=1, effect=#F0FB) {
									E:Cowl(angle=90, option=4, color=#457285) { }
									S:Cowl(angle=100, option=1, effect=#F0FB) {
										E:Cowl(angle=90, option=3, color=#457285) {
											S:Cowl(color=#41505D) { }
										}
									}
								}
							}
						}
						N:Cowl(option=4, color=#457285) { }
					}
				}
			}
		}
		N:Cowl() {
			N:Cowl() {
				N:Cowl() {
					N:Cowl(angle=150) {
						N:Cowl(angle=30, color=#41505D) {
							N:Cowl(color=#41505D) {
								N:Cowl(color=#457285) {
									N:Cowl(color=#457285) {
										N:Cowl(color=#457285) {
											N:Cowl(color=#457285) {
												N:Cowl(angle=4, color=#457285) {
													N:Cowl(angle=4, color=#457285) {
														N:Cowl(color=#457285) {
															N:Cowl(color=#457285) {
																N:Cowl(color=#457285) { }
															}
														}
													}
												}
												W:Cowl(angle=85, color=#457285) { }
												E:Cowl(angle=85, color=#457285) { }
											}
											W:Cowl(angle=85, color=#457285) { }
											E:Cowl(angle=85, color=#457285) { }
										}
										W:Cowl(angle=85, color=#457285) { }
										E:Cowl(angle=85, color=#457285) { }
									}
									W:Cowl(angle=85, color=#457285) { }
									E:Cowl(angle=85, color=#457285) { }
								}
								W:Cowl(angle=85, color=#41505D) { }
								E:Cowl(angle=85, color=#41505D) { }
							}
							E:Cowl(angle=85, option=4, color=#41505D) { }
							W:Cowl(angle=85, option=3, color=#41505D) { }
						}
						E:Cowl(angle=85, option=4) {
							N:Cowl(option=3, color=#41505D) { }
						}
						W:Cowl(angle=85, option=3) {
							N:Cowl(option=4, color=#41505D) { }
						}
					}
					N:Cowl(angle=-155) {
						N:Cowl(angle=-15, color=#41505D) {
							N:Cowl(angle=10, color=#403000) {
								N:Cowl(angle=-15, color=#403000) {
									N:Cowl(angle=-15, color=#41505D) {
										N:Cowl(color=#41505D) {
											N:Cowl(color=#41505D) {
												N:Cowl(angle=5, color=#41505D) {
													N:Cowl(color=#41505D) {
														N:Cowl(color=#41505D) {
															N:Cowl(color=#41505D) {
																N:Cowl(color=#457285) { }
															}
														}
													}
												}
												E:Cowl(angle=-85, color=#41505D) {
													N:Cowl(option=4, color=#41505D) { }
												}
												W:Cowl(angle=-85, color=#41505D) {
													N:Cowl(option=3, color=#41505D) { }
												}
											}
											E:Cowl(angle=-85, color=#41505D) { }
											W:Cowl(angle=-85, color=#41505D) { }
										}
										E:Cowl(angle=-85, color=#41505D) {
											S:Cowl(option=4, color=#41505D) { }
										}
										W:Cowl(angle=-85, color=#41505D) {
											S:Cowl(option=3, color=#41505D) { }
										}
									}
									W:Cowl(angle=-90, color=#403000) { }
									E:Cowl(angle=-90, color=#403000) { }
								}
								W:Cowl(angle=-90, color=#403000) { }
								E:Cowl(angle=-90, color=#403000) { }
							}
							E:Cowl(angle=-85, option=4, color=#41505D) {
								N:Cowl(option=3, color=#457285) { }
							}
							W:Cowl(angle=-85, option=3, color=#41505D) {
								N:Cowl(option=4, color=#457285) { }
							}
						}
						E:Cowl(angle=-85, option=4) {
							N:Cowl(option=3, color=#41505D) { }
						}
						W:Cowl(angle=-85, option=3) {
							N:Cowl(option=4, color=#41505D) { }
						}
					}
				}
			}
		}
		N:Weight(angle=180, option=1.5, spring=1, damper=1) { }
		S:Chip(angle=-AB) { }
		S:Trim(angle=90, spring=1, damper=1) {
			N:Chip() { }
		}
		S:Chip(angle=AB) { }
		S:Chip(spring=1, damper=1) {
			W:Cowl(angle=90, option=1, effect=#F0FB) {
				N:Cowl(angle=-150, option=1, effect=#F0FB) {
					E:Cowl(angle=-90, color=#457285) {
						N:Cowl(color=#457285) {
							W:Cowl(angle=-90, option=1, effect=#F0FB) {
								N:Cowl(angle=-30, option=1, effect=#F0FB) {
									E:Cowl(angle=-90, option=3, color=#457285) { }
								}
							}
						}
					}
				}
			}
			E:Cowl(angle=90, option=1, effect=#F0FB) {
				N:Cowl(angle=-150, option=1, effect=#F0FB) {
					W:Cowl(angle=-90, color=#457285) {
						N:Cowl(color=#457285) {
							E:Cowl(angle=-90, option=1, effect=#F0FB) {
								N:Cowl(angle=-30, option=1, effect=#F0FB) {
									W:Cowl(angle=-90, option=4, color=#457285) { }
								}
							}
						}
					}
				}
			}
			S:Chip(spring=1, damper=1) {
				S:Chip(spring=1, damper=1) {
					S:Chip(spring=1, damper=1) {
						S:Chip(spring=1, damper=1) {
							S:Chip(spring=1, damper=1) {
								W:Cowl(option=1, effect=#F0FB) {
									W:Cowl(option=1, effect=#F0FB) {
										W:Cowl(color=#41505D) {
											W:Cowl(color=#457285) {
												W:Cowl(angle=90, option=1, effect=#F0FB) {
													N:Cowl(angle=47, option=1, effect=#F0FB) {
														E:Cowl(angle=90, color=#457285) {
															N:Cowl(color=#457285) {
																N:Cowl(color=#457285) {
																	N:Cowl(option=4, color=#457285) {
																		N:Cowl(color=#41505D) {
																			N:Cowl(color=#41505D) { }
																			E:Cowl(color=#41505D) { }
																			S:Cowl(option=4, color=#41505D) { }
																		}
																	}
																	E:Cowl(color=#41505D) {
																		N:Cowl(color=#41505D) { }
																	}
																}
																E:Cowl(color=#41505D) { }
															}
														}
													}
													S:Cowl(angle=80, option=1, effect=#F0FB) {
														S:Cowl(option=1, effect=#F0FB) {
															S:Cowl(angle=30, option=1, effect=#F0FB) {
																E:Cowl(angle=90, color=#457285) {
																	S:Cowl(color=#41505D) { }
																}
															}
															E:Cowl(angle=90, color=#457285) { }
														}
														E:Cowl(angle=90, color=#457285) { }
													}
												}
											}
										}
									}
								}
								E:Cowl(option=1, effect=#F0FB) {
									E:Cowl(option=1, effect=#F0FB) {
										E:Cowl(color=#41505D) {
											E:Cowl(color=#457285) {
												E:Cowl(angle=90, option=1, effect=#F0FB) {
													N:Cowl(angle=47, option=1, effect=#F0FB) {
														W:Cowl(angle=90, color=#457285) {
															N:Cowl(color=#457285) {
																N:Cowl(color=#457285) {
																	N:Cowl(option=3, color=#457285) {
																		N:Cowl(color=#41505D) {
																			N:Cowl(color=#41505D) { }
																			W:Cowl(color=#41505D) { }
																			S:Cowl(option=3, color=#41505D) { }
																		}
																	}
																	W:Cowl(color=#41505D) {
																		N:Cowl(color=#41505D) { }
																	}
																}
																W:Cowl(color=#41505D) { }
															}
														}
													}
													S:Cowl(angle=80, option=1, effect=#F0FB) {
														S:Cowl(option=1, effect=#F0FB) {
															S:Cowl(angle=30, option=1, effect=#F0FB) {
																W:Cowl(angle=90, color=#457285) {
																	S:Cowl(color=#41505D) { }
																}
															}
															W:Cowl(angle=90, color=#457285) { }
														}
														W:Cowl(angle=90, color=#457285) { }
													}
												}
											}
										}
									}
								}
								W:Chip(spring=1, damper=1) {
									W:Chip(color=#41505D, spring=1, damper=1) {
										W:Trim(angle=R, color=#41505D, spring=1, damper=1) { }
									}
									W:Chip(angle=-90, color=#41505D, spring=1, damper=1) {
										N:Cowl(option=5, color=#457285) { }
										W:Trim(angle=RD, color=#41505D, spring=1, damper=1) { }
										W:Cowl(color=#41505D) {
											W:Cowl(angle=90, option=1, effect=#F0FB) {
												N:Cowl(angle=50, option=1, effect=#F0FB) {
													E:Cowl(angle=90, color=#457285) {
														N:Cowl(color=#457285) { }
													}
												}
												S:Cowl(angle=80, option=1, effect=#F0FB) {
													E:Cowl(angle=90, color=#457285) {
														S:Cowl(option=5, color=#457285) { }
													}
												}
											}
										}
									}
									S:Frame(angle=-JXL, option=1) {
										N:RudderF(angle=-JYL, option=1, effect=#F0FB) {
											N:Frame(angle=150, option=1, effect=#F0FB) {
												N:Jet(angle=120, power=-P, effect=4) { }
											}
										}
									}
									W:Cowl(angle=105, option=1, effect=#F0FB) {
										W:Cowl(angle=150, option=1, effect=#F0FB) {
											W:Cowl(angle=105, option=1, effect=#F0FB) {
												E:Cowl(angle=-90, option=1, effect=#F0FB) {
													W:Cowl(angle=105, option=1, effect=#F0FB) {
														W:Cowl(angle=150, option=1, effect=#F0FB) {
															W:Cowl(angle=105, option=1, effect=#F0FB) {
																S:Cowl(option=1, effect=#F0FB) {
																	W:Cowl(angle=105, option=1, effect=#F0FB) {
																		W:Cowl(angle=150, option=1, effect=#F0FB) {
																			W:Cowl(angle=105, option=1, effect=#F0FB) {
																				E:Cowl(angle=60, option=1, effect=#F0FB) {
																					N:Cowl(option=1, effect=#F0FB) {
																						E:Cowl(angle=80, option=1, effect=#F0FB) {
																							E:Cowl(angle=-160, option=1, effect=#F0FB) {
																								E:Cowl(angle=-100, option=1, effect=#F0FB) {
																									W:Cowl(angle=150, option=1, effect=#F0FB) {
																										W:Cowl(angle=120, option=1, effect=#F0FB) {
																											S:Cowl(angle=JP2L, option=5, color=#606060) { }
																											S:Cowl(angle=185, option=5, color=#41505D) { }
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																				E:Cowl(angle=-60, option=1, effect=#F0FB) {
																					N:Cowl(option=1, effect=#F0FB) {
																						E:Cowl(angle=80, option=1, effect=#F0FB) {
																							E:Cowl(angle=-160, option=1, effect=#F0FB) {
																								E:Cowl(angle=-100, option=1, effect=#F0FB) {
																									W:Cowl(angle=150, option=1, effect=#F0FB) {
																										W:Cowl(angle=120, option=1, effect=#F0FB) {
																											S:Cowl(angle=JP3L, option=5, color=#606060) { }
																											S:Cowl(angle=185, option=5, color=#41505D) { }
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																				W:Cowl(angle=180, option=1, effect=#F0FB) {
																					N:Cowl(option=1, effect=#F0FB) {
																						E:Cowl(angle=80, option=1, effect=#F0FB) {
																							E:Cowl(angle=-160, option=1, effect=#F0FB) {
																								E:Cowl(angle=-100, option=1, effect=#F0FB) {
																									W:Cowl(angle=150, option=1, effect=#F0FB) {
																										W:Cowl(angle=120, option=1, effect=#F0FB) {
																											S:Cowl(angle=JP1L, option=5, color=#606060) { }
																											S:Cowl(angle=175, option=5, color=#41505D) { }
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								E:Chip(spring=1, damper=1) {
									E:Chip(color=#41505D, spring=1, damper=1) {
										E:Trim(angle=R, color=#41505D, spring=1, damper=1) { }
									}
									E:Chip(angle=-90, color=#41505D, spring=1, damper=1) {
										N:Cowl(option=5, color=#457285) { }
										E:Trim(angle=RD, color=#41505D, spring=1, damper=1) { }
										E:Cowl(color=#41505D) {
											E:Cowl(angle=90, option=1, effect=#F0FB) {
												N:Cowl(angle=50, option=1, effect=#F0FB) {
													W:Cowl(angle=90, color=#457285) {
														N:Cowl(color=#457285) { }
													}
												}
												S:Cowl(angle=80, option=1, effect=#F0FB) {
													W:Cowl(angle=90, color=#457285) {
														S:Cowl(option=5, color=#457285) { }
													}
												}
											}
										}
									}
									S:Frame(angle=-JXR, option=1) {
										N:RudderF(angle=-JYR, option=1, effect=#F0FB) {
											N:Frame(angle=150, option=1, effect=#F0FB) {
												N:Jet(angle=120, power=-P, effect=4, spring=4) { }
											}
										}
									}
									W:Cowl(angle=105, option=1, effect=#F0FB) {
										W:Cowl(angle=150, option=1, effect=#F0FB) {
											W:Cowl(angle=105, option=1, effect=#F0FB) {
												E:Cowl(angle=-90, option=1, effect=#F0FB) {
													W:Cowl(angle=105, option=1, effect=#F0FB) {
														W:Cowl(angle=150, option=1, effect=#F0FB) {
															W:Cowl(angle=105, option=1, effect=#F0FB) {
																S:Cowl(option=1, effect=#F0FB) {
																	W:Cowl(angle=105, option=1, effect=#F0FB) {
																		W:Cowl(angle=150, option=1, effect=#F0FB) {
																			W:Cowl(angle=105, option=1, effect=#F0FB) {
																				E:Cowl(angle=60, option=1, effect=#F0FB) {
																					N:Cowl(option=1, effect=#F0FB) {
																						E:Cowl(angle=80, option=1, effect=#F0FB) {
																							E:Cowl(angle=-160, option=1, effect=#F0FB) {
																								E:Cowl(angle=-100, option=1, effect=#F0FB) {
																									W:Cowl(angle=150, option=1, effect=#F0FB) {
																										W:Cowl(angle=120, option=1, effect=#F0FB) {
																											S:Cowl(angle=JP2R, option=5, color=#606060) { }
																											S:Cowl(angle=185, option=5, color=#41505D) { }
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																				E:Cowl(angle=-60, option=1, effect=#F0FB) {
																					N:Cowl(option=1, effect=#F0FB) {
																						E:Cowl(angle=80, option=1, effect=#F0FB) {
																							E:Cowl(angle=-160, option=1, effect=#F0FB) {
																								E:Cowl(angle=-100, option=1, effect=#F0FB) {
																									W:Cowl(angle=150, option=1, effect=#F0FB) {
																										W:Cowl(angle=120, option=1, effect=#F0FB) {
																											S:Cowl(angle=JP3R, option=5) { }
																											S:Cowl(angle=185, option=5, color=#41505D) { }
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																				W:Cowl(angle=180, option=1, effect=#F0FB) {
																					N:Cowl(option=1, effect=#F0FB) {
																						E:Cowl(angle=80, option=1, effect=#F0FB) {
																							E:Cowl(angle=-160, option=1, effect=#F0FB) {
																								E:Cowl(angle=-100, option=1, effect=#F0FB) {
																									W:Cowl(angle=150, option=1, effect=#F0FB) {
																										W:Cowl(angle=120, option=1, effect=#F0FB) {
																											S:Cowl(angle=JP1R, option=5, color=#606060) { }
																											S:Cowl(angle=175, option=5, color=#41505D) { }
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								E:Cowl() {
									N:Cowl(angle=150, option=1, effect=#F0FB) {
										N:Cowl(angle=120, option=1, effect=#F0FB) {
											N:Cowl(angle=-105, option=1, effect=#F0FB) {
												S:Cowl(angle=-15, color=#41505D) {
													S:Cowl(color=#41505D) {
														S:Cowl(angle=-30, color=#457285) {
															W:Cowl(angle=-90, option=3) { }
														}
													}
													E:Cowl(angle=-90, color=#457285) {
														S:Cowl(color=#457285) {
															S:Cowl(option=5, color=#457285) { }
														}
													}
													W:Cowl(angle=-90, color=#457285) {
														S:Cowl(color=#457285) {
															S:Cowl(color=#457285) { }
														}
													}
												}
											}
											S:Cowl(angle=-105, option=1, effect=#F0FB) {
												N:Cowl(angle=-15, color=#41505D) {
													N:Cowl(color=#41505D) {
														N:Cowl(angle=-15, color=#457285) {
															W:Cowl(angle=-90, option=4) { }
														}
													}
												}
											}
										}
									}
								}
								W:Cowl() {
									N:Cowl(angle=150, option=1, effect=#F0FB) {
										N:Cowl(angle=120, option=1, effect=#F0FB) {
											N:Cowl(angle=-105, option=1, effect=#F0FB) {
												S:Cowl(angle=-15, color=#41505D) {
													S:Cowl(color=#41505D) {
														S:Cowl(angle=-30, color=#457285) {
															E:Cowl(angle=-90, option=4) { }
														}
													}
													E:Cowl(angle=-90, color=#457285) {
														S:Cowl(color=#457285) {
															S:Cowl(color=#457285) { }
														}
													}
													W:Cowl(angle=-90, color=#457285) {
														S:Cowl(color=#457285) {
															S:Cowl(option=5, color=#457285) { }
														}
													}
												}
											}
											S:Cowl(angle=-105, option=1, effect=#F0FB) {
												N:Cowl(angle=-15, color=#41505D) {
													N:Cowl(color=#41505D) {
														N:Cowl(angle=-15, color=#457285) { }
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
Lua
{
maf = require("daretoku_taka/maf.lua")

do
	local FSX=_X(FS)
	local FSY=_Y(FS)
	local FSZ=_Z(FS)
	local RSX=_X(RS)
	local RSY=_Y(RS)
	local RSZ=_Z(RS)
	local LSX=_X(LS)
	local LSY=_Y(LS)
	local LSZ=_Z(LS)
	local TSX=_X(TS)
	local TSY=_Y(TS)
	local TSZ=_Z(TS)
	
	function MF(a)
		local FX=_X(FS)-FSX
		local FY=_Y(FS)-FSY
		local FZ=_Z(FS)-FSZ
		local RX=_X(RS)-RSX
		local RY=_Y(RS)-RSY
		local RZ=_Z(RS)-RSZ
		local LX=_X(LS)-LSX
		local LY=_Y(LS)-LSY
		local LZ=_Z(LS)-LSZ
		local TX=_X(TS)-TSX
		local TY=_Y(TS)-TSY
		local TZ=_Z(TS)-TSZ

		WX=(FX*_YX(FS)+FY*_YY(FS)+FZ*_YZ(FS))-(TX*_YX(TS)+TY*_YY(TS)+TZ*_YZ(TS))
		WY=(RX*_ZX(RS)+RY*_ZY(RS)+RZ*_ZZ(RS))-(LX*_ZX(LS)+LY*_ZY(LS)+LZ*_ZZ(LS))
		WZ=(RX*_YX(RS)+RY*_YY(RS)+RZ*_YZ(RS))-(LX*_YX(LS)+LY*_YY(LS)+LZ*_YZ(LS))
		VEL=(FX*_ZX(FS)+FY*_ZY(FS)+FZ*_ZZ(FS))*3.6
		VX=(FX*_XX(FS)+FY*_XY(FS)+FZ*_XZ(FS))*3.6

		VY=(FX*_YX(FS)+FY*_YY(FS)+FZ*_YZ(FS))*3.6

		FSX=_X(FS)
		FSY=_Y(FS)
		FSZ=_Z(FS)
		RSX=_X(RS)
		RSY=_Y(RS)
		RSZ=_Z(RS)
		LSX=_X(LS)
		LSY=_Y(LS)
		LSZ=_Z(LS)
		TSX=_X(TS)
		TSY=_Y(TS)
		TSZ=_Z(TS)
	end
end

math.limit = function (val,max,min)	return val>max and max or val<min and min or val	end

function _NORMANALOG(n)
	local v = _ANALOG(n)
	if v < 100 and v > -100 then v = 0 end
	return _ANALOG(n)/1000
end

function _VEL(n)
	return _LEN3( _VX(n), _VY(n), _VZ(n))
end

function _LEN3(a,b,c)
	return math.sqrt(a * a + b * b + c * c)
end

function _LINER(v,t,s)
	local r=v
	if v<t then r=v+s end
	if v>t then r=v-s end
	if r>t and v<t then r=t end
	if r<t and v>t then r=t end
	return r
end

function XPID_new()
	local obj = {
		i = 0,
		d = 0,
		e_b = 0,

		PID = function (self,now,tgt,kp,ki,kd,lim)
			local e_n = now - tgt
			local e_d = e_n - self.e_b
			
			local p = e_n * kp
			
			local i = self.i + e_n * ki
			
			local d = e_d * kd
			
			i=math.min(lim,math.max(-lim,i))
			
			self.i = i
			
			self.e_b = e_n
			
			local pid = p+i+d
			
			pid = math.min(lim,math.max(-lim,pid))
			
			return pid
		end
	}
	
	return obj
end

JX_PID = XPID_new()
JY_PID = XPID_new()
JZ_PID = XPID_new()

i = maf.vec3(0,0,-1)
e = maf.vec3(0,0,0)
q = maf.quat()

i2 = maf.vec3(0,1,0)

function OnFrame()
	MF()
	
	local core = 0
	
	local p = maf.vec3(_X(core),_Y(core),_Z(core))
	local xv = maf.vec3(_XX(core),_XY(core),_XZ(core))
	local yv = maf.vec3(_YX(core),_YY(core),_YZ(core))
	local zv = maf.vec3(_ZX(core),_ZY(core),_ZZ(core))
	
	e = maf.vec3(-_NORMANALOG(1)/10,0,-_NORMANALOG(0)/10)
	
	q:setEularAngles(e)
	
	local t = q * i + -zv
	
	local m = -zv
	local d = m - t
	
	_SETCOLOR(255*65536)
	_MOVE3D(p:unpack())
	_LINE3D((p+m*10):unpack())
	
	_SETCOLOR(255*256)
	_MOVE3D(p:unpack())
	_LINE3D((p+t*10):unpack())
	
	local _pw = 30
	
	local j = maf.vec3(JX_PID:PID(d.x,0,30,0,0,30), JY_PID:PID(d.y,0,30,0,0,30), JZ_PID:PID(d.z,0,30,0,0,30))
	
	local xj = j * xv
	local yj = j * yv
	
	local xa = (xj.x + xj.y + xj.z)
	local ya = -(yj.x + yj.y + yj.z)
	
	local t2 = q * i2 + yv
	m = yv
	d = m - t2
	
	_SETCOLOR(255*65536)
	_MOVE3D(p:unpack())
	_LINE3D((p+m*10):unpack())
	
	_SETCOLOR(255*256)
	_MOVE3D(p:unpack())
	_LINE3D((p+t2*10):unpack())
	
	j = maf.vec3(JX_PID:PID(d.x,0,30,0,0,30), JY_PID:PID(d.y,0,30,0,0,30), JZ_PID:PID(d.z,0,30,0,0,30))
	
	xj = j * xv
	yj = j * zv
	
	JXR = ya
	JYR = xa
	JXL = ya
	JYL = xa
	
	RD = xa
	V = ya
	R = -(xj.x + xj.y + xj.z)
	
	P=100000
	
	local njxR = JXR
	local njyR = JYR
	local njxL = JXL
	local njyL = JYL
	local bjp = 0
	
	JP2R = (bjp - math.sin(math.rad(-60)) * njxR + math.cos(math.rad(-60)) * njyR)
	JP3R = (bjp + math.sin(math.rad( 60)) * njxR - math.cos(math.rad( 60)) * njyR)
	JP1R = (bjp - njxR)
	
	JP2L = (bjp - math.sin(math.rad(-60)) * njxL + math.cos(math.rad(-60)) * njyL)
	JP3L = (bjp + math.sin(math.rad( 60)) * njxL - math.cos(math.rad( 60)) * njyL)
	JP1L = (bjp - njxL)
end
}
