// [RCD] 
Val
{
	BRAKE(default=1, max=300, step=300)
	ENGINE(default=0, min=-3500, max=3500, step=3500)
	HANDLE(default=0, min=-30, max=30, step=5)
	HBRAKE(default=1, max=80, step=80)
}
Key
{
	0:Engine(step=-100)
	1:Engine(step=100)
	2:Handle(step=-0.5)
	3:Handle(step=0.5)
	7:Brake(step=30), HBrake(step=20)
	8:HBrake(step=20)
}
Body
{
	Core(color=#ff0022) {
		N:Frame(angle=-15) {
			N:Frame(angle=15, spring=0.7, damper=0.3) {
				W:Rudder(angle=Handle, spring=0.7, color=#ff0022) {
					N:Frame(angle=-150, spring=0.3, damper=0.3) {
						N:Frame(angle=150, spring=0.5, damper=0.3) {
							W:Wheel(angle=90, brake=Brake) { }
						}
					}
				}
				E:Rudder(angle=Handle, spring=0.7, color=#ff0022) {
					N:Frame(angle=-150, spring=0.3, damper=0.3) {
						N:Frame(angle=150, spring=0.5, damper=0.3) {
							E:Wheel(angle=90, brake=Brake) { }
						}
					}
				}
			}
		}
		S:Frame() {
			E:Chip(angle=-120, color=#ff0022) { }
			W:Chip(angle=-120, color=#ff0022) { }
			W:Chip(color=#ff0022) {
				N:Frame(angle=-160, spring=0.3, damper=0.3) {
					N:Frame(angle=160, spring=0.5, damper=0.3) {
						W:Wheel(angle=90, power=Engine, brake=HBrake) { }
					}
				}
			}
			E:Chip(color=#ff0022) {
				N:Frame(angle=-160, spring=0.3, damper=0.3) {
					N:Frame(angle=160, spring=0.5, damper=0.3) {
						E:Wheel(angle=90, power=-Engine, brake=HBrake) { }
					}
				}
			}
		}
	}
}
Lua
{
function OnFrame()
	if _RED(0,32) < 0.6 then HANDLE = 20 end
	if _RED(64,32) < 0.6 then HANDLE = -20 end
end
}
