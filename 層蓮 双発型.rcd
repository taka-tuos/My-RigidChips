// [RCD] 
Val
{
	ELON(default=0, min=-16, max=16, step=4)
	ENGINE(default=0, max=262144, step=16384)
	EVTR(default=0, min=-16, max=16, step=4)
	GUN(default=0, max=0, step=8192)
	GUN1(default=0, max=16777216, step=16777216)
	GUN2(default=0, max=16777216, step=16777216)
	GUN3(default=0, max=16777216, step=16777216)
	GUN4(default=0, max=16777216, step=16777216)
	GUN5(default=0, max=16777216, step=16777216)
	GUN6(default=0, max=16777216, step=16777216)
	GUN7(default=0, max=16777216, step=16777216)
	GUN8(default=0, max=16777216, step=16777216)
	GUN9(default=0, max=16777216, step=16777216)
	GUNA(default=0, max=16777216, step=16777216)
	GUNB(default=0, max=16777216, step=16777216)
	GUNC(default=0, max=16777216, step=16777216)
	VAR1(default=0, min=-16777216, max=16777216)
	VAR2(default=0, max=16777216)
	VAR3(default=0, max=16777216)
	VAR4(default=0, max=16777216)
	VAR5(default=0, max=16777216)
	VAR6(default=0, max=16777216)
	VAR7(default=0, max=16777216)
	VAR8(default=0, max=16777216)
	VAR9(default=0, max=16777216)
	VARA(default=0, max=16777216)
	VARB(default=0, max=16777216)
	VARC(default=0, max=16777216)
	VARD(default=0, min=-16777216, max=16777216)
}
Key
{
	0:EVTR(step=4)
	1:EVTR(step=-4)
	2:ELON(step=4)
	3:ELON(step=-4)
	4:ENGINE(step=16384)
	5:GUN(step=8192)
	14:ROLL2(step=2097152)
	15:ROLL2(step=-2097152)
}
Body
{
	Core() {
		S:Frame(angle=170, option=1) {
			S:Frame(angle=-170, option=1) {
				S:Frame(angle=90, option=1) {
					E:Chip(angle=90) { }
					N:Frame(option=1) { }
					S:Chip(angle=90) {
						N:Chip() {
							N:Chip() {
								S:Frame(angle=90, option=1) {
									E:Cowl(angle=-90) {
										E:Cowl() {
											E:Cowl(color=#202020, effect=#70FB) {
												S:Cowl(option=3, color=#202020, effect=#70FB) { }
											}
											S:Cowl(option=0, color=#202020, effect=#70FB) {
												W:Cowl(angle=45) {
													W:Cowl(angle=-45) {
														W:Cowl(angle=-45) {
															S:Cowl(angle=-90, option=3) { }
															W:Cowl(angle=45) {
																W:Cowl() {
																	W:Cowl() { }
																}
																S:Cowl(angle=-90) {
																	W:Cowl(angle=-25) {
																		W:Cowl(angle=-15) { }
																	}
																}
															}
														}
														S:Cowl(angle=-90) { }
													}
													S:Cowl(angle=-90, option=4) { }
												}
											}
										}
									}
									W:Cowl(angle=-90) {
										W:Cowl() {
											W:Cowl(color=#202020, effect=#70FB) {
												W:Cowl(angle=-90, color=#202020, effect=#70FB) {
													S:Cowl(angle=-60, color=#202020, effect=#70FB) { }
												}
												S:Cowl(angle=0, option=4, color=#202020, effect=#70FB) { }
											}
											S:Cowl(color=#202020, effect=#70FB) {
												S:Cowl(angle=-90, color=#202020, effect=#70FB) {
													W:Cowl(angle=-45, color=#202020, effect=#70FB) { }
												}
												E:Cowl(angle=45) {
													E:Cowl(angle=-45) {
														S:Cowl(angle=-90) { }
														E:Cowl(angle=-45) {
															S:Cowl(angle=-90, option=4) { }
															E:Cowl(angle=45) {
																E:Cowl() {
																	E:Cowl() { }
																}
															}
														}
													}
													S:Cowl(angle=-90, option=3) { }
												}
											}
										}
									}
									S:Frame(angle=90) {
										E:Frame(option=1) {
											S:Chip() {
												E:Trim(angle=ELON) {
													E:Chip() {
														E:Chip() {
															E:Cowl(option=5) { }
														}
													}
													W:Frame() {
														S:RudderF(angle=-10) {
															E:Cowl() {
																E:Cowl() {
																	E:Cowl() {
																		E:Cowl(option=5) { }
																	}
																}
															}
														}
													}
												}
												E:Frame() {
													N:Jet(angle=90, power=ENGINE) { }
												}
											}
										}
										W:Frame(option=1) {
											S:Chip() {
												W:Trim(angle=ELON) {
													W:Chip() {
														W:Chip() {
															W:Cowl(option=5) { }
														}
													}
													E:Frame() {
														S:RudderF(angle=10) {
															W:Cowl() {
																W:Cowl() {
																	W:Cowl() {
																		W:Cowl(option=5) { }
																	}
																}
															}
														}
													}
												}
												W:Frame() {
													N:Jet(angle=90, power=ENGINE) { }
												}
											}
										}
									}
								}
								W:Chip(angle=90) {
									N:Chip() {
										N:Chip() {
											N:Chip() {
												N:Chip() { }
											}
										}
									}
									S:Chip() { }
								}
								E:Chip(angle=90) {
									N:Chip() {
										N:Chip() {
											N:Chip() {
												N:Chip() { }
											}
										}
									}
									S:Chip() { }
								}
								N:Chip() {
									E:Frame(angle=90) { }
									W:Frame(option=1) {
										W:Frame(angle=90) {
											S:Arm(power=GUN, option=5000) { }
											E:Frame(angle=-100) {
												E:Frame(angle=-90) {
													E:Frame(angle=-90) {
														S:Arm(power=GUN, option=50000) { }
													}
													S:Arm(power=GUN, option=50000) { }
												}
												S:Arm(power=GUN, option=50000) { }
											}
										}
									}
									E:Frame(option=1) {
										E:Frame(angle=90) {
											W:Frame(angle=-100) {
												W:Frame(angle=-90) {
													W:Frame(angle=-90) {
														S:Arm(power=GUN, option=50000) { }
													}
													S:Arm(power=GUN, option=50000) { }
												}
												S:Arm(power=GUN, option=50000) { }
											}
											S:Arm(power=GUN, option=5000) { }
										}
									}
									N:Chip() {
										N:Chip() {
											N:Cowl(angle=90) {
												N:Cowl(angle=90) {
													N:Cowl() { }
													S:Cowl() { }
												}
											}
											N:Cowl(angle=90) { }
											N:Chip() {
												N:Frame(angle=90) {
													N:Frame(angle=-90) {
														E:Frame() {
															E:Trim(angle=EVTR) {
																S:Chip() {
																	W:Chip() { }
																	E:Cowl() { }
																}
																E:Cowl(option=3) { }
															}
														}
														E:Frame() {
															S:Frame() {
																S:TrimF(angle=-90) {
																	N:Chip() {
																		E:Rudder(angle=-40) {
																			E:Cowl(option=5) { }
																			W:Cowl() { }
																		}
																		N:Chip() {
																			E:Chip() {
																				E:Cowl(option=5) { }
																			}
																		}
																	}
																}
															}
														}
														W:Frame() {
															W:Trim(angle=-EVTR) {
																W:Cowl(option=4) { }
																S:Chip() {
																	E:Chip() { }
																	W:Cowl() { }
																}
															}
															S:Frame() {
																S:TrimF(angle=-90) {
																	N:Chip() {
																		E:Rudder(angle=-40) {
																			E:Cowl(option=5) { }
																			W:Cowl() { }
																		}
																		N:TrimF(angle=-90, option=1) { }
																		N:Chip() {
																			E:Chip() {
																				E:Cowl(option=5) { }
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
						S:Frame() { }
						S:Frame() { }
						S:Frame() { }
						S:Weight(option=7) { }
					}
				}
			}
			S:Cowl(angle=-80, effect=#F0FB) {
				E:Cowl(angle=-45) {
					N:Cowl(angle=-90, option=4) { }
					E:Cowl(angle=-45) {
						E:Cowl() {
							E:Cowl() {
								E:Cowl(angle=-45) {
									N:Cowl(angle=-90, option=3) { }
									E:Cowl(angle=45) {
										E:Cowl() {
											E:Cowl() {
												N:Cowl() { }
											}
										}
									}
								}
								N:Cowl(angle=-90) { }
							}
						}
						N:Cowl(angle=-90) { }
					}
				}
				W:Cowl(angle=-45) {
					W:Cowl(angle=-45) {
						W:Cowl() {
							W:Cowl() {
								W:Cowl(angle=-45) {
									N:Cowl(angle=-90, option=4) { }
									W:Cowl(angle=45) {
										W:Cowl() {
											W:Cowl() {
												N:Cowl() { }
											}
										}
									}
								}
								N:Cowl(angle=-90) { }
							}
						}
						N:Cowl(angle=-90) { }
					}
					N:Cowl(angle=-90, option=3) { }
				}
			}
		}
	}
}
Lua
{function _VEL(n)
	return _LEN3( _VX(n), _VY(n), _VZ(n))
end

function _LEN3(a,b,c)
	return math.sqrt(a * a + b * b + c * c)
end

MKPH = 0


function OnFrame()
	if _KEY(5) == 1 then VAR1 = VAR1 + 30 end
	VAR2 = VAR1 + 30
	VAR3 = VAR2 + 30
	VAR4 = VAR3 + 30
	VAR5 = VAR4 + 30
	VAR6 = VAR5 + 30
	VAR7 = VAR6 + 30
	VAR8 = VAR7 + 30
	VAR9 = VAR8 + 30
	VARA = VAR9 + 30
	VARB = VARA + 30
	VARC = VARB + 30
	VARD = VAR1 - 10
	if math.mod(VAR1,360) == 360 - 0 and _KEY(5) == 1 then
		GUN1 = 16777216
	end
	if math.mod(VAR1,360) == 360 - 30 and _KEY(5) == 1 then
		GUN2 = 16777216
	end
	if math.mod(VAR1,360) == 360 - 60 and _KEY(5) == 1 then
		GUN3 = 16777216
	end
	if math.mod(VAR1,360) == 360 - 90 and _KEY(5) == 1 then
		GUN4 = 16777216
	end
	if math.mod(VAR1,360) == 360 - 120 and _KEY(5) == 1 then
		GUN5 = 16777216
	end
	if math.mod(VAR1,360) == 360 - 150 and _KEY(5) == 1 then
		GUN6 = 16777216
	end
	if math.mod(VAR1,360) == 360 - 180 and _KEY(5) == 1 then
		GUN7 = 16777216
	end
	if math.mod(VAR1,360) == 360 - 210 and _KEY(5) == 1 then
		GUN8 = 16777216
	end
	if math.mod(VAR1,360) == 360 - 240 and _KEY(5) == 1 then
		GUN9 = 16777216
	end
	if math.mod(VAR1,360) == 360 - 270 and _KEY(5) == 1 then
		GUNA = 16777216
	end
	if math.mod(VAR1,360) == 360 - 300 and _KEY(5) == 1 then
		GUNB = 16777216
	end
	if math.mod(VAR1,360) == 360 - 330 and _KEY(5) == 1 then
		GUNC = 16777216
	end
end}
