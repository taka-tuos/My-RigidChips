// [RCD] 
Val
{
	AB(default=0, min=-90, max=90)
	G0(default=0, max=10000000000)
	G1(default=0, max=10000000000)
	G2(default=0, max=10000000000)
	G3(default=0, max=10000000000)
	G4(default=0, max=10000000000)
	G5(default=0, max=10000000000)
	G6(default=0, max=10000000000)
	G7(default=0, max=10000000000)
	G8(default=0, max=10000000000)
	G9(default=0, max=10000000000)
	JX(default=0, min=-90, max=90)
	JY(default=0, min=-90, max=90)
	MA1(default=0, max=10000000000, step=10000000000)
	MA2(default=0, max=10000000000, step=10000000000)
	MP1(default=0, min=-10000000000, max=10000000000)
	MP2(default=0, min=-10000000000, max=10000000000)
	MX1(default=0, min=-90, max=90)
	MX2(default=0, min=-90, max=90)
	MY1(default=0, min=-90, max=90)
	MY2(default=0, min=-90, max=90)
	MZ1(default=0, min=-10000000000, max=10000000000)
	MZ2(default=0, min=-10000000000, max=10000000000)
	P(default=0, min=-10000000000, max=10000000000)
	R(default=0, min=-90, max=90)
	RD(default=0, min=-90, max=90)
	V(default=0, min=-90, max=90)
	V0(default=0, min=-90, max=90)
	V1(default=0, min=-90, max=90)
	V2(default=0, min=-90, max=90)
	V3(default=0, min=-90, max=90)
	V4(default=0, min=-90, max=90)
	V5(default=0, min=-90, max=90)
	V6(default=0, min=-90, max=90)
	V7(default=0, min=-90, max=90)
	V8(default=0, min=-90, max=90)
	V9(default=0, min=-90, max=90)
}
Key
{
}
Body
{
	Core() {
		W:Cowl(option=1, effect=#F0FB, name=LS) { }
		E:Cowl(option=1, effect=#F0FB, name=RS) { }
		S:Cowl(option=1, effect=#F0FB, name=TS) { }
		N:Cowl(option=1, effect=#F0FB, name=FS) { }
		S:Trim(angle=90, spring=1) {
			S:TrimF(angle=90) {
				W:Frame(angle=170, option=1) {
					E:Trim(angle=R) { }
				}
				E:Frame(angle=170, option=1) {
					W:Trim(angle=R) { }
				}
				W:Cowl(angle=-10) {
					W:Cowl() {
						W:Cowl() {
							W:Cowl(angle=-90, option=1, effect=#F0FB) {
								N:Cowl(angle=-70, option=1, effect=#F0FB) {
									E:Cowl(angle=-90) {
										N:Cowl() {
											N:Cowl() {
												E:Cowl() { }
												N:Cowl() { }
											}
											E:Cowl() { }
										}
									}
								}
								S:Cowl(angle=-80, option=1, effect=#F0FB) {
									S:Cowl(angle=160, option=1, effect=#F0FB) {
										S:Cowl(angle=100, option=1, effect=#F0FB) {
											E:Cowl(angle=90) {
												E:Cowl() {
													E:Cowl() { }
												}
											}
											N:Cowl(angle=75, option=1, effect=#F0FB) {
												E:Cowl(angle=90) {
													N:Cowl() {
														N:Cowl() {
															N:Cowl() { }
															E:Cowl() { }
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
				E:Cowl(angle=-10) {
					E:Cowl() {
						E:Cowl() {
							E:Cowl(angle=-90, option=1, effect=#F0FB) {
								N:Cowl(angle=-70, option=1, effect=#F0FB) {
									W:Cowl(angle=-90) {
										N:Cowl() {
											N:Cowl() {
												W:Cowl() { }
												N:Cowl() { }
											}
											W:Cowl() { }
										}
									}
								}
								S:Cowl(angle=-80, option=1, effect=#F0FB) {
									S:Cowl(angle=160, option=1, effect=#F0FB) {
										S:Cowl(angle=100, option=1, effect=#F0FB) {
											N:Cowl(angle=75, option=1, effect=#F0FB) {
												W:Cowl(angle=90) {
													N:Cowl() {
														N:Cowl() {
															N:Cowl() { }
															W:Cowl() { }
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			S:TrimF(angle=90, option=1) {
				E:TrimF(angle=180, spring=1) {
					E:Chip(angle=0, name=MC1) {
						N:Chip(angle=MY1) { }
						N:Frame(angle=-150, option=1) {
							N:Jet(angle=-120, power=-MP1) { }
						}
						S:Arm(power=MA1, option=100000, name=MG1) {
							N:Trim(angle=90) {
								N:Chip(angle=MX1) { }
							}
						}
						E:Trim(angle=MZ1) { }
						W:Trim(angle=MZ1) { }
					}
				}
				W:TrimF(spring=1) {
					W:Chip(name=MC2) {
						S:Chip(angle=MY2) { }
						S:Frame(angle=-150, option=1) {
							S:Jet(angle=-120, power=-MP2) { }
						}
						N:Arm(power=MA2, option=100000, name=MG2) {
							S:Trim(angle=90) {
								S:Chip(angle=MX2) { }
							}
						}
						E:Trim(angle=MZ2) { }
						W:Trim(angle=MZ2) { }
					}
				}
			}
			S:Trim(spring=1) {
				S:Trim(angle=180, spring=1) {
					S:Trim(spring=1) {
						S:Trim(option=1, spring=1) {
							S:TrimF(angle=90) {
								N:Frame(angle=150, option=1) {
									N:Jet(angle=120, power=-P) { }
								}
							}
							S:Trim(option=1, spring=1) {
								W:Rudder(angle=-90, spring=1) {
									N:Trim(spring=1) {
										N:Frame(angle=-90, option=1) {
											N:Frame(option=1) {
												S:Trim(angle=V) {
													N:Cowl() {
														N:Cowl(angle=-90, option=1, effect=#F0FB) {
															W:Cowl(angle=-70, option=1, effect=#F0FB) {
																S:Cowl(angle=-90) {
																	W:Cowl() { }
																}
															}
															E:Cowl(angle=-75, option=1, effect=#F0FB) {
																S:Cowl(angle=-90) {
																	E:Cowl() { }
																}
															}
														}
													}
												}
											}
										}
										N:Frame(angle=90, option=1) {
											N:Frame(option=1) {
												S:Trim(angle=-V) {
													N:Cowl() {
														N:Cowl(angle=90, option=1, effect=#F0FB) {
															W:Cowl(angle=70, option=1, effect=#F0FB) {
																S:Cowl(angle=90) {
																	W:Cowl() { }
																}
															}
															E:Cowl(angle=75, option=1, effect=#F0FB) {
																S:Cowl(angle=90) {
																	E:Cowl() { }
																}
															}
														}
													}
												}
											}
										}
										N:Cowl(angle=-90, option=1, effect=#F0FB) {
											E:Cowl(angle=-60, option=1, effect=#F0FB) {
												E:Cowl(angle=20, option=1, effect=#F0FB) {
													S:Cowl(angle=-90) { }
												}
												S:Cowl(angle=-90) {
													E:Cowl() { }
												}
											}
											W:Cowl(angle=-80, option=1, effect=#F0FB) {
												S:Cowl(angle=-90) {
													W:Cowl() { }
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
			N:Trim(angle=90, name=CRE) {
				N:Frame(angle=V0) {
					N:Arm(option=50000, power=G0, angle=-V0, name=A0) { }
				}
				N:Frame(angle=V1) {
					N:Arm(option=50000, power=G1, angle=-V1, name=A1) { }
				}
				N:Frame(angle=V2) {
					N:Arm(option=50000, power=G2, angle=-V2, name=A2) { }
				}
				N:Frame(angle=V3) {
					N:Arm(option=50000, power=G3, angle=-V3, name=A3) { }
				}
			}
		}
		N:Cowl(angle=150) {
			N:Cowl(angle=30) {
				W:Cowl(angle=90) {
					S:Cowl() {
						N:Cowl(angle=-15) {
							N:Cowl(angle=-155) {
								N:Cowl(angle=-10) {
									W:Cowl(angle=-70) { }
									E:Cowl(angle=-90) { }
									S:Cowl(angle=-5) {
										S:Cowl() {
											S:Cowl() {
												S:Cowl(angle=-5) {
													E:Cowl(angle=-90) { }
													W:Cowl(angle=-70) { }
												}
												E:Cowl(angle=-90) { }
												W:Cowl(angle=-70) { }
											}
											E:Cowl(angle=-90) { }
											W:Cowl(angle=-70) { }
										}
										E:Cowl(angle=-90) { }
										W:Cowl(angle=-70) { }
									}
								}
							}
						}
					}
				}
				E:Cowl(angle=90) {
					S:Cowl() {
						N:Cowl(angle=-15) {
							N:Cowl(angle=-155) {
								N:Cowl(angle=-10) {
									W:Cowl(angle=-90) { }
									S:Cowl(angle=-5) {
										S:Cowl() {
											S:Cowl() {
												S:Cowl(angle=-5) {
													W:Cowl(angle=-90) { }
													E:Cowl(angle=-70) { }
												}
												W:Cowl(angle=-90) { }
												E:Cowl(angle=-70) { }
											}
											W:Cowl(angle=-90) { }
											E:Cowl(angle=-70) { }
										}
										W:Cowl(angle=-90) { }
										E:Cowl(angle=-70) { }
									}
									E:Cowl(angle=-70) { }
								}
							}
						}
					}
				}
				N:Cowl() {
					N:Cowl() {
						N:Cowl() {
							N:Cowl() {
								N:Cowl() {
									N:Cowl(angle=10, option=5) { }
								}
							}
						}
					}
				}
			}
		}
		N:Cowl() {
			N:Cowl() {
				S:Cowl(angle=-30) {
					W:Cowl(angle=60, option=4) { }
					E:Cowl(angle=60, option=3) { }
					S:Cowl(angle=30) {
						S:Cowl() {
							S:Cowl() {
								S:Cowl() {
									S:Cowl() {
										S:Cowl() {
											S:Cowl() {
												S:Cowl(angle=10, option=5) { }
											}
										}
										E:Cowl(angle=90) {
											N:Cowl() { }
											S:Cowl() {
												S:Cowl() {
													S:Cowl(angle=10, option=5) { }
												}
											}
										}
										W:Cowl(angle=90) {
											N:Cowl() { }
											S:Cowl() {
												S:Cowl() {
													S:Cowl(angle=10, option=5) { }
												}
											}
										}
										N:Cowl() {
											N:Cowl() {
												N:Cowl() {
													N:Cowl() {
														N:Cowl() {
															N:Cowl() { }
														}
													}
												}
											}
										}
									}
								}
							}
							W:Cowl(angle=90) {
								S:Cowl() { }
							}
							E:Cowl(angle=90) {
								S:Cowl() { }
							}
						}
					}
				}
				N:Cowl() {
					N:Cowl() {
						N:Cowl() {
							N:Cowl() {
								N:Cowl(angle=-160) {
									W:Cowl(angle=-85, option=3) {
										N:Cowl(option=4) { }
									}
									N:Cowl() {
										N:Cowl(angle=-5) {
											N:Cowl(angle=-10) {
												N:Cowl(angle=-10) {
													N:Cowl() {
														N:Cowl(angle=5) {
															N:Cowl() {
																N:Cowl() {
																	N:Cowl() {
																		N:Cowl() {
																			W:Cowl(angle=-90) { }
																			E:Cowl(angle=-90) { }
																			N:Cowl() {
																				N:Cowl(angle=-25) {
																					W:Cowl(angle=-90) { }
																					E:Cowl(angle=-90) { }
																				}
																				W:Cowl(angle=-90) { }
																				E:Cowl(angle=-90) { }
																			}
																		}
																		W:Cowl(angle=-90) { }
																		E:Cowl(angle=-90) { }
																	}
																	W:Cowl(angle=-90) { }
																	E:Cowl(angle=-90) { }
																}
																W:Cowl(angle=-90) { }
																E:Cowl(angle=-90) { }
															}
															W:Cowl(angle=-90) { }
															E:Cowl(angle=-90) { }
														}
														E:Cowl(angle=-85) {
															N:Cowl() { }
														}
														W:Cowl(angle=-85) {
															N:Cowl() { }
														}
													}
													E:Cowl(angle=-85) { }
													W:Cowl(angle=-85) { }
												}
												W:Cowl(angle=-90) { }
												E:Cowl(angle=-90) { }
											}
											W:Cowl(angle=-90) { }
											E:Cowl(angle=-90) { }
										}
										W:Cowl(angle=-85, option=3) { }
										E:Cowl(angle=-85, option=4) {
											N:Cowl(option=3) { }
										}
									}
									E:Cowl(angle=-85, option=4) {
										N:Cowl(option=3) { }
									}
								}
								N:Cowl(angle=155) {
									W:Cowl(angle=85, option=3) {
										N:Cowl(option=4) { }
									}
									N:Cowl(angle=20) {
										N:Cowl(angle=5) {
											N:Cowl() {
												N:Cowl() {
													N:Cowl() { }
												}
											}
											E:Cowl(angle=85) {
												N:Cowl() {
													N:Cowl() {
														N:Cowl() { }
													}
												}
											}
											W:Cowl(angle=85) {
												N:Cowl() {
													N:Cowl() {
														N:Cowl() { }
													}
												}
											}
										}
										W:Cowl(angle=85, option=3) { }
										E:Cowl(angle=85, option=4) { }
									}
									E:Cowl(angle=85, option=4) {
										N:Cowl(option=3) { }
									}
								}
							}
						}
					}
				}
				S:Cowl(angle=30) {
					W:Cowl(angle=-60, option=4) { }
					E:Cowl(angle=-60, option=3) { }
				}
			}
		}
	}
}
Lua
{
require("daretoku_taka/xgui.lua")
require("daretoku_taka/xhud2.lua")
require("daretoku_taka/libccvx3.lua")
require("daretoku_taka/libresume.lua")
require("daretoku_taka/libgun.lua")
require("daretoku_taka/libweapon.lua")

_limitlist={1500,1800,2000,2200,2500,64512}

_prvtbl = InitPRVTable()

_prvtbl.p.limit = 300000
_prvtbl.p.step  = 150000

_prvtbl.r.tgt = 360
_prvtbl.r.kp  = 8
_prvtbl.r.ki  = 16
_prvtbl.r.kd  = 4
_prvtbl.r.il  = 30

_prvtbl.v.tgt = 180
_prvtbl.v.kp  = 12
_prvtbl.v.ki  = 24
_prvtbl.v.kd  = 4
_prvtbl.v.il  = 60

function OnInit()
	CCVXOnInit({ Missile={n=2,mdl={1,-1},func=_KEYDOWN,fire=1} , Gun={func=_KEY,fire=2,op=50000,an=4,ang=65} })
end

function OnFrame()
	CCVXOnFrame(true)

	ShowSplash("XF-2 StarFighter")
	
	local p,r,v,b = GetPRVBAnalog(_prvtbl,{p=P,b=AB})
	
	P=p
	R=r
	V=v
	AB=b
	
	CheckLimit()
	
	XHUD.Draw()
	
	Weapon.Stat()
end
}
