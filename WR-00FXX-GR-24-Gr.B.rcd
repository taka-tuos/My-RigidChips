// [RCD] 
Val
{
	B(default=0, max=10000000000)
	B2(default=0, max=10000000000)
	BL(default=0, max=16777216)
	DM(default=0, max=1)
	DMF(default=0, max=1)
	P(default=0, min=-10000000000, max=10000000000)
	PU(default=0, min=-10000000000, max=10000000000)
	S(default=180, min=-360, max=360)
	SP(default=0, max=1)
	SPF(default=0, max=1)
}
Key
{
}
Body
{
	Core() {
		N:Frame(angle=180) {
			N:Frame(angle=-160) {
				N:Frame(angle=70, option=1) {
					N:Weight(angle=90, option=1, color=0) {
						N:Cowl(color=0) {
							N:Cowl(color=0) {
								W:Cowl(color=0) { }
								E:Cowl(color=0) { }
							}
						}
						N:TrimF(angle=180, option=1) {
							N:Chip(option=1, color=0) {
								W:Frame(angle=10, option=1, spring=SP, damper=DM) {
									W:Wheel(angle=-100, power=-P, brake=B2, option=0, effect=3, name=RRW) { }
								}
								E:Frame(angle=10, option=1, spring=SP, damper=DM) {
									E:Wheel(angle=-100, power=P, brake=B2, option=0, effect=3, name=RLW) { }
								}
								W:Cowl(angle=-90) {
									N:Cowl(angle=92, color=BL, effect=#0FFB) {
										W:Cowl(angle=90) {
											W:Cowl(angle=5) {
												N:Cowl(angle=90) { }
											}
											N:Cowl(angle=91) {
												W:Cowl(angle=-15) {
													W:Cowl(angle=-167.5) {
														S:Cowl(angle=-90) {
															W:Cowl() { }
														}
													}
												}
											}
										}
									}
								}
								E:Cowl(angle=-90) {
									N:Cowl(angle=92, color=BL, effect=#0FFB) {
										E:Cowl(angle=90) {
											E:Cowl(angle=5) {
												N:Cowl(angle=90) { }
											}
											N:Cowl(angle=91) {
												E:Cowl(angle=-15) {
													E:Cowl(angle=-167.5) {
														N:Cowl(angle=-92.5) { }
														S:Cowl(angle=-90) {
															E:Cowl() { }
														}
													}
												}
											}
										}
									}
								}
								S:Cowl(angle=-90) {
									S:Cowl(angle=80) {
										S:Cowl(angle=-170) {
											N:Cowl(angle=-90) { }
											S:Cowl(angle=-15, color=0) {
												S:Cowl(angle=-60) {
													S:Cowl(angle=150, color=#0000FF) {
														E:Cowl(angle=0) {
															E:Cowl(angle=95, option=4) { }
															S:Cowl(angle=110) {
																E:Cowl(angle=95, option=3) { }
																E:Cowl(angle=-85, option=1, effect=#F0FB) {
																	E:Cowl(angle=170, option=1, effect=#F0FB) {
																		E:Cowl(angle=95) {
																			W:Cowl(angle=-95, option=3) { }
																		}
																	}
																}
															}
															N:Cowl(angle=75, color=0) { }
														}
														N:Cowl(angle=80, color=0) { }
														S:Cowl(angle=110, color=#0000FF) { }
														W:Cowl() {
															W:Cowl(angle=95, option=3) { }
															S:Cowl(angle=110) {
																W:Cowl(angle=95, option=4) { }
																W:Cowl(angle=-85, option=1, effect=#F0FB) {
																	W:Cowl(angle=170, option=1, effect=#F0FB) {
																		W:Cowl(angle=95) {
																			E:Cowl(angle=-95, option=4) { }
																		}
																	}
																}
															}
															N:Cowl(angle=75, color=0) { }
														}
														N:Cowl(angle=-150, color=#202020) {
															E:Cowl(angle=-85, option=1, effect=#F0FB) {
																E:Cowl(angle=170, option=1, effect=#F0FB) {
																	E:Cowl(angle=-85, option=1, color=#202020) {
																		W:Cowl(color=#202020) {
																			N:Cowl(angle=-135, color=#202020) { }
																		}
																		N:Cowl(angle=-135, color=#202020) { }
																		E:Cowl(angle=-90, option=3, color=#202020) { }
																	}
																}
															}
															W:Cowl(angle=-85, option=1, effect=#F0FB) {
																W:Cowl(angle=170, option=1, effect=#F0FB) {
																	W:Cowl(angle=-85, option=1, color=#202020) {
																		E:Cowl(color=#202020) {
																			N:Cowl(angle=-135, color=#202020) { }
																		}
																		N:Cowl(angle=-135, color=#202020) { }
																		W:Cowl(angle=-90, option=4, color=#202020) { }
																	}
																}
															}
															E:Cowl(color=#202020) {
																E:Cowl(angle=-90, option=3, color=#202020) { }
															}
															W:Cowl(color=#202020) {
																W:Cowl(angle=-90, option=4, color=#202020) { }
															}
														}
													}
													N:Cowl(angle=-50, color=#0000FF, name=70) {
														E:Cowl(angle=-90, color=#0000FF) { }
														W:Cowl(angle=-90, color=#0000FF) { }
														N:Cowl(angle=-5, color=#0000FF) {
															E:Cowl(angle=-90, color=#0000FF) { }
															W:Cowl(angle=-90, color=#0000FF) { }
														}
													}
												}
											}
											S:Cowl(angle=-75) {
												S:Cowl(angle=150, option=1, color=0) {
													S:Cowl(angle=-165) {
														E:Cowl(angle=90, option=4, color=#202020) {
															N:Cowl(angle=-70, color=#202020) {
																N:Cowl(angle=-100, option=3, color=#202020) { }
																N:Cowl(angle=165, color=#202020) {
																	N:Cowl(angle=-5, color=#202020) { }
																}
															}
														}
														W:Cowl(angle=90, option=3, color=#202020) {
															N:Cowl(angle=-70, color=#202020) {
																N:Cowl(angle=-100, option=4, color=#202020) { }
																N:Cowl(angle=165, color=#202020) {
																	N:Cowl(angle=-5, color=#202020) { }
																}
															}
														}
													}
												}
											}
										}
									}
								}
								N:Cowl(angle=-90, color=BL, effect=#0FFB) { }
								N:Cowl(angle=-90, option=1, effect=#F0FB) {
									N:Cowl(angle=90, option=1, effect=#F0FB) {
										W:Cowl(angle=80, option=1, effect=#F0FB) {
											W:Cowl(angle=-160, option=1, effect=#F0FB) {
												W:Cowl(angle=170, option=5, color=#202020) { }
											}
										}
										E:Cowl(angle=80, option=1, effect=#F0FB) {
											E:Cowl(angle=-160, option=1, effect=#F0FB) {
												E:Cowl(angle=170, option=5, color=#202020) { }
											}
										}
									}
								}
							}
						}
						S:TrimF(angle=180, option=1) {
							S:Cowl(angle=-90) {
								S:Cowl(angle=90) {
									S:Cowl(angle=80) {
										S:Cowl(angle=-150, color=#0000FF) {
											W:Cowl() {
												W:Cowl(angle=-95, option=3) { }
												S:Cowl(angle=-100) {
													W:Cowl(angle=-95, option=4) { }
												}
												W:Cowl(angle=80, option=1, effect=#F0FB) {
													W:Cowl(angle=-170, option=1, effect=#F0FB) {
														S:Cowl(angle=-90, option=1, effect=#F0FB) {
															W:Cowl(angle=-10) {
																W:Cowl(angle=-20) {
																	N:Cowl(angle=-90, option=4) { }
																}
																E:Cowl(angle=-100) { }
															}
														}
													}
												}
											}
											E:Cowl() {
												E:Cowl(angle=-95, option=4) { }
												S:Cowl(angle=-100) {
													E:Cowl(angle=-95, option=3) { }
												}
												E:Cowl(angle=80, option=1, effect=#F0FB) {
													E:Cowl(angle=-170, option=1, effect=#F0FB) {
														S:Cowl(angle=-90, option=1, effect=#F0FB) {
															E:Cowl(angle=-10) {
																E:Cowl(angle=-20) {
																	N:Cowl(angle=-90, option=3) { }
																}
																W:Cowl(angle=-100) { }
															}
														}
													}
												}
											}
											S:Cowl(angle=-100, color=#0000FF) {
												S:Cowl(angle=-20, color=#0000FF) {
													W:Cowl() {
														W:Cowl(angle=-95) { }
													}
													E:Cowl() {
														E:Cowl(angle=-95) { }
													}
												}
											}
										}
									}
									N:Cowl(angle=-40, color=0, effect=#A0FB) {
										W:Cowl(angle=25, color=0, effect=#A0FB) {
											W:Cowl(angle=60, color=0, effect=#A0FB) { }
										}
										E:Cowl(angle=25, color=0, effect=#A0FB) {
											E:Cowl(angle=60, color=0, effect=#A0FB) { }
										}
										N:Cowl(angle=40, color=#0000FF) {
											E:Cowl(angle=25, color=0, effect=#A0FB) {
												E:Cowl(angle=60, color=0, effect=#A0FB) { }
											}
											W:Cowl(angle=25, color=0, effect=#A0FB) {
												W:Cowl(angle=60, color=0, effect=#A0FB) { }
											}
											N:Cowl(angle=20, color=0, effect=#A0FB) {
												E:Cowl(angle=25, color=0, effect=#A0FB) {
													E:Cowl(angle=60, color=0, effect=#A0FB) { }
													N:Cowl(angle=5, color=0) {
														S:Cowl(angle=90, color=0) { }
													}
												}
												W:Cowl(angle=25, color=0, effect=#A0FB) {
													W:Cowl(angle=60, color=0, effect=#A0FB) { }
													N:Cowl(angle=5, color=0) {
														S:Cowl(angle=90, color=0) { }
													}
												}
												N:Cowl(angle=5, color=0) {
													S:Cowl(angle=90, color=0) { }
												}
											}
										}
									}
								}
							}
							E:Cowl(angle=-90) {
								E:Cowl(angle=90) {
									S:Cowl(angle=PU) {
										E:Cowl(angle=95) {
											N:Cowl(option=4) { }
										}
										W:Cowl(angle=90) { }
										S:Cowl(angle=90, color=#FFFF00, effect=#0FFB) { }
									}
									N:Cowl(angle=-5) {
										E:Cowl(angle=80) {
											S:Cowl(option=3) { }
										}
										N:Cowl(angle=10) {
											E:Cowl(angle=80) { }
										}
									}
									E:Cowl(angle=85) { }
								}
							}
							W:Cowl(angle=-90) {
								W:Cowl(angle=90) {
									S:Cowl(angle=PU) {
										E:Cowl(angle=90) { }
										W:Cowl(angle=95) {
											N:Cowl(option=3) { }
										}
										S:Cowl(angle=90, color=#FFFF00, effect=#0FFB) { }
									}
									N:Cowl(angle=-5) {
										W:Cowl(angle=80) {
											S:Cowl(option=4) { }
										}
										N:Cowl(angle=10) {
											W:Cowl(angle=80) { }
										}
									}
									W:Cowl(angle=85) { }
								}
							}
							S:Cowl(angle=5, color=0) {
								S:Cowl(angle=-65, color=#0000FF) {
									W:Cowl() {
										W:Cowl(angle=-95, option=3) { }
									}
									E:Cowl() {
										E:Cowl(angle=-95, option=4) { }
									}
								}
								E:Cowl(color=0) { }
								W:Cowl(color=0) { }
								S:Cowl(angle=-70) {
									S:Cowl(angle=140, option=1, effect=#F0FB) {
										S:Cowl(angle=110, color=#202020) {
											S:Cowl(angle=75) {
												S:Cowl(angle=-150) {
													S:Cowl(angle=-105, color=#202020) {
														W:Cowl(color=#202020) { }
														E:Cowl(color=#202020) { }
													}
												}
											}
											W:Cowl(angle=85, option=1, effect=#F0FB) {
												W:Cowl(angle=-170, option=1, effect=#F0FB) {
													W:Cowl(angle=85, option=5, color=#202020) {
														E:Cowl(color=#202020) {
															N:Cowl(angle=150, color=#202020) {
																W:Cowl(angle=5, option=5, color=#202020) { }
															}
														}
													}
												}
											}
											E:Cowl(angle=85, option=1, effect=#F0FB) {
												E:Cowl(angle=-170, option=1, effect=#F0FB) {
													E:Cowl(angle=85, option=5, color=#202020) {
														W:Cowl(color=#202020) {
															N:Cowl(angle=150, color=#202020) {
																E:Cowl(angle=5, option=5, color=#202020) { }
															}
														}
													}
												}
											}
										}
									}
								}
							}
							N:Cowl(color=0) {
								E:Cowl(angle=5, color=0) {
									S:Cowl(color=0) {
										E:Cowl(angle=-95) { }
										S:Cowl(color=0) { }
									}
									N:Cowl(color=0) {
										E:Cowl(angle=-95) { }
									}
									E:Cowl(angle=-95) { }
									E:Cowl(angle=-100) {
										E:Cowl(angle=172, color=#202020) {
											S:Cowl(color=#202020) { }
											N:Cowl(color=#202020) { }
										}
									}
								}
								W:Cowl(angle=5, color=0) {
									N:Cowl(angle=0, color=0) {
										W:Cowl(angle=-95) { }
									}
									S:Cowl(angle=0, color=0) {
										W:Cowl(angle=-95) { }
										S:Cowl(color=0) { }
									}
									W:Cowl(angle=-95) { }
									W:Cowl(angle=-100) {
										W:Cowl(angle=172, color=#202020) {
											N:Cowl(color=#202020) { }
											S:Cowl(color=#202020) { }
										}
									}
								}
								S:Cowl(color=0) {
									N:Cowl(angle=-20, color=#804040) {
										N:Cowl(angle=-70, option=5, color=#804040) { }
									}
								}
							}
							S:Chip(option=1) {
								E:Frame(angle=10, option=1, spring=SPF, damper=DMF) {
									E:RudderF(angle=-S, option=1) {
										W:Wheel(angle=-100, power=P, brake=B, effect=3, name=FLW) { }
									}
								}
								W:Frame(angle=10, option=1, spring=SPF, damper=DMF) {
									W:RudderF(angle=-S, option=1) {
										E:Wheel(angle=-100, power=-P, brake=B, effect=3, name=FRW) { }
									}
								}
								S:Cowl(angle=-65) { }
							}
						}
						S:Cowl(color=0) {
							N:Cowl(color=0) { }
						}
						E:Chip(angle=100) { }
						W:Chip(angle=100) { }
						S:Frame(angle=160) {
							W:Chip() { }
							E:Chip() { }
						}
					}
				}
			}
		}
	}
}
Lua
{
require("daretoku_taka/xgui.lua")

function _VEL(n)
	return _LEN3( _VX(n), _VY(n), _VZ(n))
end

function _LEN3(a,b,c)
	return math.sqrt(a * a + b * b + c * c)
end

function _LINER(v,t,s)
	local r=v
	if v<t then r=v+s end
	if v>t then r=v-s end
	if r>t and v<t then r=t end
	if r<t and v>t then r=t end
	return r
end

function _NORMANALOG(n)
	local v = _ANALOG(n)
	if v < 100 and v > -100 then v = 0 end
	return v/1000
end

_tp=0

_tecset=true

function OnFrame()
	if _KEYDOWN(1) == 1 then
		_tp = -15 - _tp
	end
	
	XGUI.SetStringSize(32)
	
	XGUI.SetStringPosition(_WIDTH()/2,_HEIGHT()-64)
	XGUI.DrawVectorStringCenter(string.format("% 3d km/h",math.abs(_VEL(0))*3.6))
	
	if _KEYDOWN(6) == 1 then _tecset = not _tecset end
	
	local key4 = -_NORMANALOG(5)
	local key0 = _NORMANALOG(5)
	local key1 = 0
	
	if key0 < 0 then
		if _KEY(14) == 1 then
			key1 = -key0
		end
		key0 = 0
	end
	
	if key4 < 0 or key1 > 0 then key4 = 0 end
	
	BL = (math.floor(223*key4)+32)*65536
	
	PU=_LINER(PU,_tp,0.2)
	
	B2=_LINER(B2,key4*100+_KEY(15)*200,100)
	B=_LINER(B,key4*200,100)
	
	P=_LINER(P,key0*15000-key1*5000,2000)
	
	S=_LINER(S,180+_NORMANALOG(0)*30,5)
	
	_ZOOM(_GETVIEWZOOM())
	
	if _tecset then
		SP=0.15
		SPF=0.15
		DM=0.15
		DMF=0.15
	else
		SP=1
		SPF=1
		DM=1
		DMF=1
	end
end
}
