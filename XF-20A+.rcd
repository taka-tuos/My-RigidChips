// [RCD] 
Val
{
	AB(default=0, min=-180, max=180)
	G0(default=0, max=10000000000)
	G1(default=0, max=10000000000)
	G2(default=0, max=10000000000)
	G3(default=0, max=10000000000)
	GF(default=0, min=-180, max=180)
	GR(default=0, min=-180, max=180)
	P(default=0, min=-10000000000, max=10000000000)
	R(default=0, min=-90, max=90)
	RD(default=0, min=-90, max=90)
	V(default=0, min=-90, max=90)
	V0(default=0, min=-90, max=90)
	V1(default=0, min=-90, max=90)
	V2(default=0, min=-90, max=90)
	V3(default=0, min=-90, max=90)
	W0(default=0, min=-180, max=180)
	W1(default=0, min=-180, max=180)
	W2(default=0, min=-180, max=180)
	W3(default=0, min=-180, max=180)
	WB(default=0, min=-10000000000, max=10000000000)
	WS(default=0, min=-10000000000, max=10000000000)
}
Key
{
}
Body
{
	Core() {
		W:Cowl(option=1, effect=#F0FB, option=1, name=LS) { }
		E:Cowl(option=1, effect=#F0FB, option=1, name=RS) { }
		S:Cowl(option=1, effect=#F0FB, option=1, name=TS) { }
		N:Cowl(option=1, effect=#F0FB, option=1, name=FS) { }
		N:Chip(name=EJ1) {
			N:Weight() {
				N:Cowl() {
					N:Cowl(angle=-155) {
						N:Cowl(angle=-2, color=#404040, effect=#308F) {
							N:Cowl(angle=-30, color=#404040, effect=#308F) {
								N:Cowl(angle=-10) {
									W:Cowl(angle=-90, color=#64646E) { }
									E:Cowl(angle=-90, color=#C0C8C0) { }
								}
								W:Cowl(angle=-90, color=#404040, effect=#308F) { }
								E:Cowl(angle=-90, color=#404040, effect=#308F) { }
							}
							W:Cowl(angle=-90, color=#404040, effect=#308F) { }
							E:Cowl(angle=-90, color=#404040, effect=#308F) { }
						}
						W:Cowl(angle=-85, option=3) {
							N:Cowl(angle=-5, option=4, color=#C0C8C0) { }
						}
						E:Cowl(angle=-85, option=4) {
							N:Cowl(angle=-5, option=3, color=#64646E) { }
						}
					}
					N:Cowl(angle=150) {
						N:Cowl(angle=30, color=#64646E) {
							N:Cowl(angle=5) {
								N:Cowl() {
									W:Cowl(angle=85, option=4) {
										S:Cowl(color=#A0A0AA) { }
									}
								}
								E:Cowl(angle=85, color=#A0A0AA) {
									N:Cowl(option=4) { }
								}
							}
							W:Cowl(angle=85, option=3, color=#A0A0AA) { }
							E:Cowl(angle=85, option=4, color=#64646E) { }
						}
						W:Cowl(angle=85, option=3) {
							N:Cowl(angle=5, option=4, color=#C0C8C0) { }
						}
						E:Cowl(angle=85, option=4) {
							N:Cowl(angle=5, option=3, color=#64646E) { }
						}
					}
				}
			}
			W:Rudder(angle=-60, color=#C0C8C0) {
				W:Chip(color=#64646E) {
					W:Chip(color=#A0A0AA) {
						W:Trim(angle=R, color=#C0C8C0) { }
						W:Frame(option=1) {
							W:Chip(angle=-V, color=#FFD200) { }
							S:Rudder(angle=-30, color=#C0C8C0) {
								N:Chip(angle=-90, color=#FFD200) {
									W:Chip(angle=-RD, color=#FFD200) { }
									E:Cowl(option=3, color=#A0A0AA) { }
								}
								N:Wheel(angle=GR, brake=WB) { }
								E:Cowl(color=#A0A0AA) { }
								N:Cowl(option=4, color=#C0C8C0) {
									W:Cowl(color=#FFD200) {
										W:Cowl(angle=90, option=1, effect=#F0FB) {
											N:Cowl(angle=35, option=1, effect=#F0FB) {
												E:Cowl(angle=90, color=#FFD200) {
													E:Cowl(color=#C0C8C0) { }
												}
											}
										}
									}
								}
								W:Cowl(option=3, color=#64646E) { }
								W:Cowl(angle=90, option=1, effect=#F0FB) {
									S:Cowl(angle=80, option=1, effect=#F0FB) {
										E:Cowl(angle=90, color=#A0A0AA) {
											S:Cowl(color=#64646E) { }
										}
									}
								}
							}
						}
						N:Rudder(angle=-120) {
							N:Trim(angle=90, spring=1, damper=1, name=CRE) {
								S:Frame(angle=V0, spring=1, damper=1) {
									S:Frame(angle=-W0, spring=1, damper=1) {
										S:Arm(option=50000, power=G0, angle=V0, spring=1, damper=1, name=A0) { }
									}
								}
								S:Frame(angle=V1, spring=1, damper=1) {
									S:Frame(angle=-W1, spring=1, damper=1) {
										S:Arm(option=50000, power=G1, angle=V1, spring=1, damper=1, name=A1) { }
									}
								}
								S:Frame(angle=V2, spring=1, damper=1) {
									S:Frame(angle=-W2, spring=1, damper=1) {
										S:Arm(option=50000, power=G2, angle=V2, spring=1, damper=1, name=A2) { }
									}
								}
								S:Frame(angle=V3, spring=1, damper=1) {
									S:Frame(angle=-W3, spring=1, damper=1) {
										S:Arm(option=50000, power=G3, angle=V3, spring=1, damper=1, name=A3) { }
									}
								}
							}
						}
					}
					S:Cowl(option=4, color=#64646E) { }
				}
				N:Cowl(angle=90, option=1, effect=#F0FB) {
					E:Cowl(angle=-15, option=1, effect=#F0FB) {
						S:Cowl(angle=90) {
							W:Cowl() { }
							E:Cowl(option=4) { }
							N:Cowl(angle=-150, color=#A0A0AA) {
								W:Cowl(color=#C0C8C0) {
									W:Cowl(angle=-30, option=3, color=#64646E) { }
								}
								E:Cowl(option=3) { }
							}
							N:Cowl(angle=150, color=#A0A0AA) {
								W:Cowl(color=#C0C8C0) {
									W:Cowl(angle=30, option=3, color=#C0C8C0) { }
								}
								E:Cowl(option=3) { }
							}
						}
					}
				}
			}
			E:Rudder(angle=60, color=#64646E) {
				E:Chip(color=#C0C8C0) {
					E:Chip(color=#C0C8C0) {
						E:Trim(angle=R, color=#64646E) { }
						E:Frame(option=1) {
							E:Chip(angle=-V, color=#FFD200) { }
							S:Rudder(angle=30, color=#64646E) {
								N:Chip(angle=-90, color=#FFD200) {
									E:Chip(angle=RD, color=#FFD200) { }
									W:Cowl(option=4, color=#C0C8C0) { }
								}
								N:Wheel(angle=GR, brake=WB) { }
								W:Cowl(color=#A0A0AA) { }
								N:Cowl(option=3, color=#64646E) {
									E:Cowl(color=#FFD200) {
										E:Cowl(angle=90, option=1, effect=#F0FB) {
											N:Cowl(angle=35, option=1, effect=#F0FB) {
												W:Cowl(angle=90, color=#FFD200) {
													W:Cowl(color=#64646E) { }
												}
											}
										}
									}
								}
								E:Cowl(option=4, color=#FFD200) { }
								E:Cowl(angle=90, option=1, effect=#F0FB) {
									S:Cowl(angle=80, option=1, effect=#F0FB) {
										W:Cowl(angle=90, color=#A0A0AA) {
											S:Cowl(color=#A0A0AA) { }
										}
									}
								}
							}
						}
						N:Rudder(angle=120) {
							N:Trim(angle=-90, spring=1, damper=1, name=CRE) {
								S:Frame(angle=V0, spring=1, damper=1) {
									S:Frame(angle=-W0, spring=1, damper=1) {
										S:Arm(option=50000, power=G0, angle=V0, spring=1, damper=1, name=A0) { }
									}
								}
								S:Frame(angle=V1, spring=1, damper=1) {
									S:Frame(angle=-W1, spring=1, damper=1) {
										S:Arm(option=50000, power=G1, angle=V1, spring=1, damper=1, name=A1) { }
									}
								}
								S:Frame(angle=V2, spring=1, damper=1) {
									S:Frame(angle=-W2, spring=1, damper=1) {
										S:Arm(option=50000, power=G2, angle=V2, spring=1, damper=1, name=A2) { }
									}
								}
								S:Frame(angle=V3, spring=1, damper=1) {
									S:Frame(angle=-W3, spring=1, damper=1) {
										S:Arm(option=50000, power=G3, angle=V3, spring=1, damper=1, name=A3) { }
									}
								}
							}
						}
					}
					S:Cowl(option=3, color=#C0C8C0) { }
				}
				N:Cowl(angle=90, option=1, effect=#F0FB) {
					W:Cowl(angle=-15, option=1, effect=#F0FB) {
						S:Cowl(angle=90) {
							E:Cowl() { }
							W:Cowl() { }
							N:Cowl(angle=-150, color=#A0A0AA) {
								E:Cowl(color=#64646E) {
									E:Cowl(angle=-30, option=4, color=#C0C8C0) { }
								}
								W:Cowl(option=4) { }
							}
							N:Cowl(angle=150, color=#A0A0AA) {
								W:Cowl(option=4) { }
								E:Cowl(color=#64646E) {
									E:Cowl(angle=30, option=4, color=#64646E) { }
								}
							}
						}
					}
				}
			}
			S:Frame(angle=30) {
				S:Jet(angle=-120, power=P) {
					N:Cowl(angle=110, color=#402010) {
						S:Cowl(angle=20) { }
						S:Cowl(angle=10, color=#C0C8C0) {
							S:Cowl(angle=10, color=#A0A0AA) {
								W:Cowl(angle=90, color=#A0A0AA) { }
								E:Cowl(angle=90, color=#A0A0AA) { }
							}
							W:Cowl(angle=90, color=#C0C8C0) { }
							E:Cowl(angle=90, color=#C0C8C0) { }
						}
					}
					S:Cowl(angle=110, color=#402010) {
						N:Cowl(angle=10, color=#64646E) {
							W:Cowl(angle=90, color=#64646E) { }
							E:Cowl(angle=90, color=#C0C8C0) { }
						}
					}
					E:Cowl(angle=100, option=5, color=#402010) {
						W:Cowl(angle=5, option=4, color=#C0C8C0) { }
					}
					W:Cowl(angle=100, option=5, color=#402010) {
						E:Cowl(angle=5, option=3, color=#64646E) { }
					}
				}
			}
			S:TrimF(angle=90, option=1) {
				N:RudderF(angle=-GF, option=1) {
					N:Wheel(angle=WS, brake=WB) { }
				}
			}
			S:Chip(angle=-AB) { }
			S:Chip(angle=AB) { }
		}
	}
}
Lua
{
require("daretoku_taka/xgui.lua")
require("daretoku_taka/xhud-le.lua")
require("daretoku_taka/libccvx3.lua")
require("daretoku_taka/libresume.lua")
require("daretoku_taka/libgun2.lua")
require("daretoku_taka/libweapon.lua")

_limitlist={1500,1800,2000,2200,2500,64512}

_prvtbl = InitPRVTable()

_prvtbl.p.limit = 400000
_prvtbl.p.step  = 200000

_prvtbl.r.tgt = 360
_prvtbl.r.kp  = 12
_prvtbl.r.ki  = 12
_prvtbl.r.kd  = 4
_prvtbl.r.il  = 20

_prvtbl.v.tgt = 180
_prvtbl.v.kp  = 12
_prvtbl.v.ki  = 16
_prvtbl.v.kd  = 4
_prvtbl.v.il  = 20

WS_PID = XPID_new()
RD_PID = XPID_new()

RX_PID = XPID_new()
VX_PID = XPID_new()

local inited = false

_mv=0
_my=0
_xy=0

_gf=25
_gr=70

_vm=false
_vmv=0

function OnFrame()
	if not inited then
		CCVXOnInit({ Gun={func=_KEY,fire=7,op=50000,an=4,ang=45} })
		inited = true
	end

	CCVXOnFrame(true)
	
	out(0,string.format("%.3f km/h @ %.2f m", _mv*3.6, _my))
	out(1,string.format("MAX %.2f m", _xy))
	
	if _mv < _VEL(0) then
		_mv = _VEL(0)
		_my = _Y(0)
	end
	
	
	if _xy < _Y(0) then
		_xy = _Y(0)
	end
	
	if _KEYDOWN(7) == 1 then
		_vm = not _vm
		_vmv = _VEL()
	end
	
	ShowSplash("XF-20 Erne")
	
	local p,r,v,b = GetPRVBAnalog(_prvtbl,{p=P,b=AB})
	
	v = VX_PID:PID(0,WY,24,0,0,1000) + -_NORMANALOG(1) * 20
	r = RX_PID:PID(0,WZ,24,0,0,1000) + _NORMANALOG(0) * 20
	
	if _vm then
		local dif = _VEL() - _vmv
		out(2,dif)
		--p = SS_PID:PID(0,dif,100000,20000,20000,500000)
	end
	
	P=p
	R=r
	V=v
	AB=b
	
	local ay = (_KEY(5)-_KEY(4))*10
	
	RD = ay
	WS = ay
	
	if _gf == 0 then ay = ay * 2 end
	
	if _KEY(0) == 0 then
		if _KEYDOWN(6) == 1 then
			if _gf == 0 then _gf = 25
			else _gf = 0 end
			if _gr == 70 then _gr = -90
			else _gr = 70 end
		end
		
		WB=_LINER(WB,_KEY(7)*100,50)
	end
	
	if _KEYDOWN(3) == 1 and _KEY(0) == 1 then
		_BYE(EJ1)
	end
	
	GF=_LINER(GF,_gf,1)
	GR=_LINER(GR,_gr,6.4)
	
	CheckLimit()
	
	XHUD.Draw()
	
	Weapon.Stat()
end
}
