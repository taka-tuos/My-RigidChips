// [RCD] 
Val
{
	ANG(default=0, min=-30, max=30, disp=0)
	BRK(default=0, max=200, disp=0)
	POW(default=0, min=-3000, max=3000, step=300, disp=0)
	TRK(default=90, min=-60, max=180, disp=0)
	WL(default=60, min=30, max=70, step=5, disp=0)
	WL2(default=160, min=140, max=170, step=5, disp=0)
	WR(default=60, min=30, max=70, step=5, disp=0)
	WR2(default=160, min=140, max=170, step=5, disp=0)
	FSUS(default=0.5, min=0, max=1, disp=0)
	RSUS(default=0.5, min=0, max=1, disp=0)
	BLAMP(default=16744576,disp=0)
}
Key
{
}
Body
{
	Core() {
		S:Frame(angle=45) {
			S:Frame(angle=90) {
				S:Frame(angle=45) {
					W:Chip() {
						S:Chip(angle=WL2) { }
					}
					E:Chip() {
						S:Chip(angle=WR2) { }
					}
					N:Weight(option=4) {
						N:Chip() {
							N:Frame(angle=150) {
								N:Frame(angle=-150) {
									W:Frame() {
										W:Frame(angle=trk) { }
									}
									E:Frame() {
										E:Frame(angle=trk) { }
									}
									N:Cowl() {
										N:Cowl() {
											E:Cowl() { }
											W:Cowl() { }
										}
										S:Cowl() {
											E:Cowl() { }
											W:Cowl() { }
										}
										E:Cowl() { }
										W:Cowl() { }
									}
								}
								N:Frame(angle=-60) {
									W:Frame() { }
									E:Frame() { }
								}
							}
							N:Weight(option=2) {
								N:Chip() {
									W:Chip() { }
									E:Chip() { }
									N:Frame(angle=150) {
										N:Frame(angle=-150) {
											W:Frame() {
												W:Frame(angle=trk) { }
											}
											E:Frame() {
												E:Frame(angle=trk) { }
											}
											N:Frame(angle=trk) {
												W:Frame() { }
												E:Frame() { }
											}
										}
									}
								}
										//rear
								E:Frame(angle=-30, option=1, spring=rsus, damper=0.5) {
									E:Frame(angle=120, option=1) {
										N:Wheel(power=pow, brake=brk, option=1, effect=3) { }
									}
								}
								W:Frame(angle=-30, option=1, spring=rsus, damper=0.5) {
									W:Frame(angle=120, option=1) {
										N:Wheel(angle=0, power=-pow, brake=brk, option=1, effect=3) { }
									}
								}
								N:Frame(angle=150) {
									N:Frame(angle=-150) {
										W:Frame() {
											W:Frame(angle=trk) { }
										}
										E:Frame() {
											E:Frame(angle=trk) { }
										}
									}
								}
							}
						}
										//front
						E:Frame(angle=-30, option=1, spring=fsus, damper=0.5) {
							E:Frame(angle=120, option=1) {
								S:Wheel(angle=ang, power=pow, brake=brk, option=1, effect=2) { }
							}
						}
						W:Frame(angle=-30, option=1, spring=fsus, damper=0.5) {
							W:Frame(angle=120, option=1) {	
								S:Wheel(angle=-ang, power=-pow, brake=brk, option=1, effect=2) { }
							}
						}
					}
					S:Cowl(angle=60) {
						S:Cowl(angle=50, color=#001133, effect=#DFFF) {
							S:Cowl(color=#001133, effect=#DFFF) {
								S:Cowl(angle=70) {
									S:Cowl() {
										S:Cowl(angle=90, color=#001133, effect=#CFFF) {
											S:Cowl() {
												S:Cowl() { }
											}
										}
									}
								}
							}
							N:Cowl(angle=15) {
								W:Cowl(angle=-1, option=2, color=#FFFF80) { }
								E:Cowl(angle=-1, option=2, color=#FFFF80) { }
							}
						}
						E:Cowl() {
							S:Cowl(angle=50, color=#001133, effect=#DFFF) {
								S:Cowl(color=#001133, effect=#DFFF) {
									S:Cowl(angle=70) {
										E:Cowl(angle=85, option=3) { }
										S:Cowl() {
											S:Cowl(angle=90) {
												S:Cowl() {
													S:Cowl() { }
													E:Cowl(angle=85) {
														S:Cowl() {
															W:Cowl(angle=-6) {
																W:Cowl() {
																	W:Cowl(effect=#FFFF) {
																		W:Cowl(angle=90) {
																			W:Cowl() {
																				E:Cowl(angle=-1, option=2, color=BLAMP) { }
																			}
																		}
																	}
																}
															}
														}
														N:Cowl(angle=5) { }
													}
												}
											}
										}
									}
								}
								N:Cowl(angle=15) {
									E:Cowl(angle=80, option=3) { }
								}
								E:Cowl(angle=85, color=#001133, effect=#DFFF) {
									S:Cowl(color=#001133, effect=#DFFF) {
										E:Cowl(angle=10, option=4, color=#001133, effect=#DFFF) { }
									}
									E:Cowl(angle=8, color=#001133, effect=#DFFF) { }
								}
							}
						}
						W:Cowl() {
							S:Cowl(angle=50, color=#001133, effect=#DFFF) {
								S:Cowl(color=#001133, effect=#DFFF) {
									S:Cowl(angle=70) {
										W:Cowl(angle=85, option=4) { }
										S:Cowl() {
											S:Cowl(angle=90) {
												S:Cowl() {
													S:Cowl() { }
													W:Cowl(angle=85) {
														N:Cowl(angle=5) { }
														S:Cowl() {
															E:Cowl(angle=-6) {
																E:Cowl() {
																	E:Cowl(effect=#FFFF) {
																		E:Cowl(angle=90) {
																			E:Cowl() {
																				W:Cowl(angle=-1, option=2, color=BLAMP) { }
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
								N:Cowl(angle=15) {
									W:Cowl(angle=85, option=4) { }
								}
								W:Cowl(angle=85, color=#001133, effect=#DFFF) {
									S:Cowl(color=#001133, effect=#DFFF) {
										W:Cowl(angle=10, option=3, color=#001133, effect=#DFFF) { }
									}
									W:Cowl(angle=8, color=#001133, effect=#DFFF) { }
								}
							}
						}
						N:Cowl(angle=58) { }
					}
					N:Frame(angle=30) {
						W:Chip(angle=WL) { }
						E:Chip(angle=WR) { }
					}
					N:Frame(angle=30) {
						W:Chip(angle=WL) { }
						E:Chip(angle=WR) { }
					}
				}
			}
		}
	}
}
Lua
{
_ZOOM(40)
tk=0
t=1
ma=30
e=-1
q=-1
tm=0
qt=-1
function main()
SP=math.sqrt(_VX()^2+_VY()^2+_VZ()^2)*3.6
out(0,"FPS%  :  ",(_FPS()/_BASE())*100,"%    SPEED  :  ",SP," kmph")
if _KEYDOWN(16)>0 then
e=e*-1
end
if e>0 then
out(2,string.format("POWER  :  %d",POW),"\n",string.format("ANGLE  :  %d",ANG),"\n",string.format("BRAKE  :  %d",BRK),"\n",string.format("WING LEFT  :  %d",WL),"\n",
string.format("WING RIGHT  :  %d",WR),"\n",string.format("TRUNK PUT BACK NO.  :  %d",tk),"\n",string.format("TRUNK PUT BACK +-  :  %d",t),"\n",
string.format("TRUNK ANGLE  :  %d",TRK),"\n",string.format("MAX ANGLE ABS  :  %d",ma),"\n",
"FRONT SUSPENSION  :  ",FSUS,"\n","REAR SUSPENSION  :  ",RSUS)
else
out(1)
end
RSUS=RSUS-(0.05*_KEYDOWN(10))+(0.05*_KEYDOWN(11))
FSUS=FSUS-(0.05*_KEYDOWN(12))+(0.05*_KEYDOWN(13))
if _KEYDOWN(6)>0 then
	tk=tk+t
	if tk==1 then
		t=-1
	elseif tk==-1 then
		t=1
	end
end
if tk==-1 then
	if TRK>-60 then
		TRK=TRK-2
	end
elseif tk==0 then
	if TRK<90 then
		TRK=TRK+2
	elseif TRK>90 then
		TRK=TRK-2
	end
elseif tk==1 then
	if TRK<180 then
		TRK=TRK+2
	end
end
if _KEY(0)>0 then
	POW=POW+3000
end
if _KEY(1)>0 then
	POW=-1500
end
if SP>70 then
	ma=10
elseif SP>50 and SP<=70 then
	ma=15
elseif SP>30 and SP<=50 then
	ma=20
elseif SP<=30 then
	ma=30
end
if _KEY(2)>0 then
	ANG=ANG+5

	if ANG>=ma then
		ANG=ma
	end
	WL=WL-5
	WR=WR+5
	WL2=WL2-5
	WR2=WR2+5
end
if _KEY(3)>0 then
	ANG=ANG-5
	if ANG<=-ma then
		ANG=-ma
	end

	WR=WR-5
	WL=WL+5
	WR2=WR2-5
	WL2=WL2+5
end
if _KEY(2)==0 and _KEY(3)==0 then
	if ANG>0 then
		ANG=ANG-5
	elseif ANG<0 then
		ANG=ANG+5
	end
end
if _KEY(4)>0 then
	BRK=200
	BLAMP=16711680
end
if _KEY(5)>0 then
	BRK=100
	BLAMP=16711680
end
if _KEY(4)==0 and _KEY(5)==0 then
	BRK=0
	BLAMP=16744576
end
if _KEYDOWN(14)>0 then
q=q*-1
qt=1
end
tm=tm+_DT()*10
--out(5,tm,qt,q)
if qt>0 then
tm=0
end
if q>0 then
out(15,"HOW TO USE","\n","UP  :  DRIVE","\n","DOWN  :  REVERSE","\n","LEFT/RIGHT  :  TURN","\n",
"Z  :  BRAKE","\n","X  :  WEEK BRAKE","\n","C  :  GATE","\n","FG  :  FRONT SUSPENSION","\n",
"VB  :  REAR SUSPENSION","\n","E  :  DETAIL")
else
if tm<15 and qt<0 and q<0 then
out(15,"Q  :  OPEN HOW TO USE")
else
out(15)
end
end
end
}
