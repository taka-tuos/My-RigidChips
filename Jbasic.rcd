// [RCD] BasicCar
Val
{
	BRAKE(default=0, max=80, step=80)
	ENGINE(default=0, min=-25000, max=2500, step=11500)
	HANDLE(default=0, min=-20, max=20, step=5)
	HBRAKE(default=0, max=100, step=100)
}
Key
{
	0:Engine(step=-500)
	1:Engine(step=500)
	2:Handle(step=-0.5)
	3:Handle(step=0.5)
	7:Brake(step=30), HBrake(step=20)
	8:HBrake(step=20)
}
Body
{
	Core() {
		N:Chip() {
			N:Rudder(angle=Handle) {
				W:Frame() {
					W:RLW(angle=90, power=Engine, brake=Brake) { }
				}
				E:Frame() {
					E:RLW(angle=90, power=-Engine, brake=Brake) { }
				}
				N:Chip() {
					N:Chip() {
						W:Weight() { }
						E:Weight() { }
						N:Chip() {
							W:Weight() { }
							E:Weight() { }
						}
					}
				}
			}
			E:Chip() {
				E:Chip() {
					E:Chip() {
						E:Chip() {
							E:Chip() {
								E:Chip() {
									E:Chip() {
										E:Chip() {
											E:Chip() {
												E:Chip() {
													E:Chip() {
														E:Chip() {
															E:Chip() {
																E:Chip() {
																	E:Chip() {
																		E:Chip() {
																			E:Chip() {
																				E:Chip() {
																					E:Chip(angle=-90) {
																						E:Chip() {
																							S:Chip() { }
																						}
																						S:Chip() { }
																					}
																					S:Chip() {
																						S:Chip() {
																							S:Chip() {
																								S:Chip() {
																									S:Chip() {
																										S:Chip() {
																											S:Chip() { }
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																				S:Chip() {
																					S:Chip() {
																						S:Chip() {
																							S:Chip() {
																								S:Chip() {
																									S:Chip() {
																										S:Chip() { }
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																			S:Chip() {
																				S:Chip() {
																					S:Chip() {
																						S:Chip() {
																							S:Chip() {
																								S:Chip() {
																									S:Chip() {
																										S:Chip() {
																											S:Chip() {
																												S:Chip() {
																													S:Chip() {
																														S:Chip() {
																															S:Chip() { }
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
														E:Frame(angle=-90, option=1) {
															S:Rudder(angle=90) {
																E:Chip() { }
															}
														}
													}
												}
												E:Frame(angle=-90, option=1) {
													S:Rudder(angle=90) {
														E:Chip() { }
													}
												}
											}
										}
										E:Frame(angle=-90, option=1) {
											S:Rudder(angle=90) {
												E:Chip() { }
											}
										}
									}
								}
								E:Frame(angle=-90, option=1) {
									S:Rudder(angle=90) {
										E:Chip() { }
									}
								}
							}
						}
						E:Frame(angle=-90, option=1) {
							S:Rudder(angle=90) {
								E:Chip() { }
							}
						}
					}
				}
			}
			W:Chip() {
				W:Chip() {
					W:Chip() {
						W:Chip() {
							W:Chip() {
								W:Chip() {
									W:Chip() {
										W:Chip() {
											W:Chip() {
												W:Chip() {
													W:Chip() {
														W:Chip() {
															W:Chip() {
																W:Chip() {
																	W:Chip() {
																		W:Chip() {
																			W:Chip() {
																				W:Chip() {
																					W:Chip() {
																						W:Chip() {
																							S:Chip() {
																								S:Chip() {
																									S:Chip() {
																										S:Chip() {
																											S:Chip() {
																												S:Chip() {
																													S:Chip() { }
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																						S:Chip() {
																							S:Chip() {
																								S:Chip() {
																									S:Chip() {
																										S:Chip() {
																											S:Chip() {
																												S:Chip() { }
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																					S:Chip() {
																						S:Chip() {
																							S:Chip() {
																								S:Chip() {
																									S:Chip() {
																										S:Chip() {
																											S:Chip() {
																												S:Chip() {
																													S:Chip() {
																														S:Chip() {
																															S:Chip() {
																																S:Chip() { }
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
															E:Frame(angle=-90, option=1) {
																S:Rudder(angle=90) {
																	E:Chip() { }
																}
															}
														}
													}
													E:Frame(angle=-90, option=1) {
														S:Rudder(angle=90) {
															E:Chip() { }
														}
													}
												}
											}
											E:Frame(angle=-90, option=1) {
												S:Rudder(angle=90) {
													E:Chip() { }
												}
											}
										}
									}
									E:Frame(angle=-90, option=1) {
										S:Rudder(angle=90) {
											E:Chip() { }
										}
									}
								}
							}
							E:Frame(angle=-90, option=1) {
								S:Rudder(angle=90) {
									E:Chip() { }
								}
							}
						}
					}
				}
			}
		}
		S:Chip() {
			W:Frame() {
				W:RLW(angle=90, power=Engine, brake=HBrake) { }
			}
			E:Frame() {
				E:RLW(angle=90, power=-Engine, brake=HBrake) { }
			}
		}
		S:Chip() { }
	}
}
Script
{
	print 0,"Welcome to Rigid-Chips World."
	print 1,"  FPS=",_FPS(),"  Chips=",_CHIPS(),"  Weight=",_WEIGHT()
	print 2,"  Width=",_WIDTH(),"  Height=",_HEIGHT()
	print 3,"  Faces=",_FACE()
	print 4,"  Vel=",_VEL()
	print 5,"  R=",_RED(32,32)
	print 6,"  G=",_GREEN(32,32)
	print 7,"  B=",_BLUE(32,32)
}
